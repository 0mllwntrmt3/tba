"use strict";(self.webpackChunknoloyolo=self.webpackChunknoloyolo||[]).push([[759],{3759:module=>{eval('module.exports = JSON.parse(\'{"address":"0x775E9568A11F30BEC7adE4A69761ec96C9db682B","abi":[{"inputs":[{"internalType":"address","name":"_coverAddress","type":"address"},{"internalType":"contract IPositionRouter","name":"_positionRouter","type":"address"},{"internalType":"contract IVault","name":"_vault","type":"address"},{"internalType":"contract IRouter","name":"_router","type":"address"},{"internalType":"contract IERC20","name":"_collateralToken","type":"address"},{"internalType":"contract IERC20","name":"_USDC","type":"address"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"uint8","name":"_collateralDecimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"CloseNoLoss","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"positionSize","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateral","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"swapPrice","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"comissionCoef","type":"uint8"}],"name":"OpenNoLoss","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"comission","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"returnValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"swapPrice","type":"uint256"}],"name":"PaidNoLoss","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"leverage","type":"uint256"}],"name":"SetComissionCoef","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"leverage","type":"uint256"}],"name":"SetLeverageComissionCoef","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"min","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"max","type":"uint8"}],"name":"SetLeverageLimits","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SetMaxAmount","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SetMinAmount","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint8","name":"limit","type":"uint8"}],"name":"SetPositionsLimit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"min","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"max","type":"uint8"}],"name":"SetStopLimits","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"SetTake","type":"event"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"calculateStopMaxAmount","outputs":[{"internalType":"uint256","name":"stopAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"calculateStopPrice","outputs":[{"internalType":"uint256","name":"stop","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"calculateStopProfitOf","outputs":[{"internalType":"uint256","name":"stop","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"closeNoLoss","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeSlippage","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"closeTake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"collateralToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"comissionCoef","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"coverAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address[]","name":"_path","type":"address[]"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"uint256","name":"_collateralDelta","type":"uint256"},{"internalType":"uint256","name":"_sizeDelta","type":"uint256"},{"internalType":"bool","name":"_isLong","type":"bool"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_acceptablePrice","type":"uint256"},{"internalType":"uint256","name":"_minOut","type":"uint256"},{"internalType":"uint256","name":"_executionFee","type":"uint256"},{"internalType":"bool","name":"_withdrawETH","type":"bool"}],"name":"createDecreasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address[]","name":"_path","type":"address[]"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"internalType":"uint256","name":"_minOut","type":"uint256"},{"internalType":"uint256","name":"_sizeDelta","type":"uint256"},{"internalType":"bool","name":"_isLong","type":"bool"},{"internalType":"uint256","name":"_acceptablePrice","type":"uint256"},{"internalType":"uint256","name":"_executionFee","type":"uint256"},{"internalType":"bytes32","name":"_referralCode","type":"bytes32"}],"name":"createIncreasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"isMax","type":"bool"}],"name":"currentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"executionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"executor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"averagePrice","type":"uint256"},{"internalType":"uint256","name":"entryFundingRate","type":"uint256"},{"internalType":"uint256","name":"reserveAmount","type":"uint256"},{"internalType":"uint256","name":"realisedPnl","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getProfitSwap","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"indexToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"leverageComissionCoef","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLeverage","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxStop","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minLeverage","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minStop","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"stop","type":"uint8"},{"internalType":"uint256","name":"take","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"}],"name":"openNoLoss","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"openSlippage","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"addressee","type":"address"}],"name":"paidStopByUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"pay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"positionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionRouter","outputs":[{"internalType":"contract IPositionRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"positions","outputs":[{"internalType":"enum NoLoss.PositionState","name":"state","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"positionSize","type":"uint256"},{"internalType":"uint256","name":"openPrice","type":"uint256"},{"internalType":"uint256","name":"closePrice","type":"uint256"},{"internalType":"uint32","name":"expiration","type":"uint32"},{"internalType":"bool","name":"isLong","type":"bool"},{"internalType":"uint8","name":"comission","type":"uint8"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint8","name":"stop","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"positionsLimit","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"contract IRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"value","type":"uint8"}],"name":"setComissionCoef","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"name":"setCoverAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setExecutionFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"name":"setExecutor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"value","type":"uint8"}],"name":"setLeverageComissionCoef","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"min","type":"uint8"},{"internalType":"uint8","name":"max","type":"uint8"}],"name":"setLeverageLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setMaxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setMinAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"limit","type":"uint8"}],"name":"setPositionsLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int8","name":"open","type":"int8"},{"internalType":"int8","name":"close","type":"int8"}],"name":"setSlippage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"min","type":"uint8"},{"internalType":"uint8","name":"max","type":"uint8"}],"name":"setStopLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"setTake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"takes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"userAllApproves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userContractIdPosition","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"userRegistration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawErc20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawErc20UserAccount","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x5fb8ac9dbd519016139bb30af0ec2db1fdcb13df251625e97e411c7fc9fcaab3","receipt":{"to":null,"from":"0xd164094Ff0F524253F485bC651b718C77739d133","contractAddress":"0x775E9568A11F30BEC7adE4A69761ec96C9db682B","transactionIndex":0,"gasUsed":"70330765","logsBloom":"0xblockHash":"0x56a417df2d0c75bc18d316d713a29a5dad82a38a69d2aa33f1b6cc927342b325","transactionHash":"0x5fb8ac9dbd519016139bb30af0ec2db1fdcb13df251625e97e411c7fc9fcaab3","logs":[{"transactionIndex":0,"blockNumber":19417153,"transactionHash":"0x5fb8ac9dbd519016139bb30af0ec2db1fdcb13df251625e97e411c7fc9fcaab3","address":"0x775E9568A11F30BEC7adE4A69761ec96C9db682B","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x000000000000000000000000d164094ff0f524253f485bc651b718c77739d133"],"data":"0x","logIndex":0,"blockHash":"0x56a417df2d0c75bc18d316d713a29a5dad82a38a69d2aa33f1b6cc927342b325"}],"blockNumber":19417153,"cumulativeGasUsed":"33572625","status":1,"byzantium":true},"args":["0x716E1d8bd7D553535eAB79a089742617Db155992","0x3D6bA331e3D9702C5e8A8d254e5d8a285F223aba","0x489ee077994B6658eAfA855C308275EAd8097C4A","0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064","0x82aF49447D8a07e3bd95BD0d56f35241523fBab1","0xff970a61a04b1ca14834a43f5de4533ebddb5cc8","0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18],"numDeployments":1,"solcInputHash":"5998e5bd5b6b4e65921c94b1cb811e20","metadata":"{\\\\"compiler\\\\":{\\\\"version\\\\":\\\\"0.8.14+commit.80d49f37\\\\"},\\\\"language\\\\":\\\\"Solidity\\\\",\\\\"output\\\\":{\\\\"abi\\\\":[{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"_coverAddress\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"contract IPositionRouter\\\\",\\\\"name\\\\":\\\\"_positionRouter\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"contract IVault\\\\",\\\\"name\\\\":\\\\"_vault\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"contract IRouter\\\\",\\\\"name\\\\":\\\\"_router\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"contract IERC20\\\\",\\\\"name\\\\":\\\\"_collateralToken\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"contract IERC20\\\\",\\\\"name\\\\":\\\\"_USDC\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"_indexToken\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"_collateralDecimals\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"constructor\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"CloseNoLoss\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"user\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"positionSize\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"collateral\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"swapPrice\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"comissionCoef\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"OpenNoLoss\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":true,\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"previousOwner\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"indexed\\\\":true,\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"newOwner\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"OwnershipTransferred\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"comission\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"returnValue\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"swapPrice\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"PaidNoLoss\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"leverage\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"SetComissionCoef\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"leverage\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"SetLeverageComissionCoef\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"min\\\\",\\\\"type\\\\":\\\\"uint8\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"max\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"SetLeverageLimits\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"amount\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"SetMaxAmount\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"amount\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"SetMinAmount\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"user\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"limit\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"SetPositionsLimit\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"min\\\\",\\\\"type\\\\":\\\\"uint8\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"max\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"SetStopLimits\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"anonymous\\\\":false,\\\\"inputs\\\\":[{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"indexed\\\\":false,\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"price\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"SetTake\\\\",\\\\"type\\\\":\\\\"event\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"USDC\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"contract IERC20\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"calculateStopMaxAmount\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"stopAmount\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"calculateStopPrice\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"stop\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"calculateStopProfitOf\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"stop\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"closeNoLoss\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"closeSlippage\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"int256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"int256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"closeTake\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"collateralToken\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"contract IERC20\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"comissionCoef\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"coverAddress\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"_user\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"address[]\\\\",\\\\"name\\\\":\\\\"_path\\\\",\\\\"type\\\\":\\\\"address[]\\\\"},{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"_indexToken\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_collateralDelta\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_sizeDelta\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"bool\\\\",\\\\"name\\\\":\\\\"_isLong\\\\",\\\\"type\\\\":\\\\"bool\\\\"},{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"_receiver\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_acceptablePrice\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_minOut\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_executionFee\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"bool\\\\",\\\\"name\\\\":\\\\"_withdrawETH\\\\",\\\\"type\\\\":\\\\"bool\\\\"}],\\\\"name\\\\":\\\\"createDecreasePosition\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"payable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"_user\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"address[]\\\\",\\\\"name\\\\":\\\\"_path\\\\",\\\\"type\\\\":\\\\"address[]\\\\"},{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"_indexToken\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_amountIn\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_minOut\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_sizeDelta\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"bool\\\\",\\\\"name\\\\":\\\\"_isLong\\\\",\\\\"type\\\\":\\\\"bool\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_acceptablePrice\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"_executionFee\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"bytes32\\\\",\\\\"name\\\\":\\\\"_referralCode\\\\",\\\\"type\\\\":\\\\"bytes32\\\\"}],\\\\"name\\\\":\\\\"createIncreasePosition\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"payable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"bool\\\\",\\\\"name\\\\":\\\\"isMax\\\\",\\\\"type\\\\":\\\\"bool\\\\"}],\\\\"name\\\\":\\\\"currentPrice\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"deposit\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"payable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"executionFee\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"executor\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"getPosition\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"size\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"collateral\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"averagePrice\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"entryFundingRate\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"reserveAmount\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"realisedPnl\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"getProfitSwap\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"bool\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"bool\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"indexToken\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"leverageComissionCoef\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"maxAmount\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"maxLeverage\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"maxStop\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"minAmount\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"minLeverage\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"minStop\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"amount\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"stop\\\\",\\\\"type\\\\":\\\\"uint8\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"take\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"leverage\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"openNoLoss\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"openSlippage\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"int256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"int256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"owner\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"amount\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"addressee\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"paidStopByUser\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"pay\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"positionId\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"positionRouter\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"contract IPositionRouter\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"positions\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"enum NoLoss.PositionState\\\\",\\\\"name\\\\":\\\\"state\\\\",\\\\"type\\\\":\\\\"uint8\\\\"},{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"user\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"positionSize\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"openPrice\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"closePrice\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint32\\\\",\\\\"name\\\\":\\\\"expiration\\\\",\\\\"type\\\\":\\\\"uint32\\\\"},{\\\\"internalType\\\\":\\\\"bool\\\\",\\\\"name\\\\":\\\\"isLong\\\\",\\\\"type\\\\":\\\\"bool\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"comission\\\\",\\\\"type\\\\":\\\\"uint8\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"collateral\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"stop\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"positionsLimit\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"renounceOwnership\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"router\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"contract IRouter\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"value\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"setComissionCoef\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"value\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"setCoverAddress\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"value\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"setExecutionFee\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"value\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"setExecutor\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"value\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"setLeverageComissionCoef\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"min\\\\",\\\\"type\\\\":\\\\"uint8\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"max\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"setLeverageLimits\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"value\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"setMaxAmount\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"value\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"setMinAmount\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"user\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"limit\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"setPositionsLimit\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"int8\\\\",\\\\"name\\\\":\\\\"open\\\\",\\\\"type\\\\":\\\\"int8\\\\"},{\\\\"internalType\\\\":\\\\"int8\\\\",\\\\"name\\\\":\\\\"close\\\\",\\\\"type\\\\":\\\\"int8\\\\"}],\\\\"name\\\\":\\\\"setSlippage\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"min\\\\",\\\\"type\\\\":\\\\"uint8\\\\"},{\\\\"internalType\\\\":\\\\"uint8\\\\",\\\\"name\\\\":\\\\"max\\\\",\\\\"type\\\\":\\\\"uint8\\\\"}],\\\\"name\\\\":\\\\"setStopLimits\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"id\\\\",\\\\"type\\\\":\\\\"uint256\\\\"},{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"price\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"setTake\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"name\\\\":\\\\"takes\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"newOwner\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"transferOwnership\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"user\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"userAllApproves\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"userContractAddress\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"userContractIdPosition\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"uint256\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"uint256\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"user\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"userRegistration\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"vault\\\\",\\\\"outputs\\\\":[{\\\\"internalType\\\\":\\\\"contract IVault\\\\",\\\\"name\\\\":\\\\"\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"stateMutability\\\\":\\\\"view\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[],\\\\"name\\\\":\\\\"withdrawETH\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"contract IERC20\\\\",\\\\"name\\\\":\\\\"token\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"withdrawErc20\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"},{\\\\"inputs\\\\":[{\\\\"internalType\\\\":\\\\"address\\\\",\\\\"name\\\\":\\\\"user\\\\",\\\\"type\\\\":\\\\"address\\\\"},{\\\\"internalType\\\\":\\\\"contract IERC20\\\\",\\\\"name\\\\":\\\\"token\\\\",\\\\"type\\\\":\\\\"address\\\\"}],\\\\"name\\\\":\\\\"withdrawErc20UserAccount\\\\",\\\\"outputs\\\\":[],\\\\"stateMutability\\\\":\\\\"nonpayable\\\\",\\\\"type\\\\":\\\\"function\\\\"}],\\\\"devdoc\\\\":{\\\\"kind\\\\":\\\\"dev\\\\",\\\\"methods\\\\":{\\\\"owner()\\\\":{\\\\"details\\\\":\\\\"Returns the address of the current owner.\\\\"},\\\\"renounceOwnership()\\\\":{\\\\"details\\\\":\\\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\\\"},\\\\"transferOwnership(address)\\\\":{\\\\"details\\\\":\\\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\\\"}},\\\\"version\\\\":1},\\\\"userdoc\\\\":{\\\\"kind\\\\":\\\\"user\\\\",\\\\"methods\\\\":{},\\\\"version\\\\":1}},\\\\"settings\\\\":{\\\\"compilationTarget\\\\":{\\\\"contracts/NoLoss/NoLossLongPut.sol\\\\":\\\\"NoLossLongPut\\\\"},\\\\"evmVersion\\\\":\\\\"london\\\\",\\\\"libraries\\\\":{},\\\\"metadata\\\\":{\\\\"bytecodeHash\\\\":\\\\"ipfs\\\\",\\\\"useLiteralContent\\\\":true},\\\\"optimizer\\\\":{\\\\"enabled\\\\":true,\\\\"runs\\\\":200},\\\\"remappings\\\\":[]},\\\\"sources\\\\":{\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\":{\\\\"content\\\\":\\\\"// SPDX-License-Identifier: MIT\\\\\\\\n\\\\\\\\npragma solidity ^0.8.0;\\\\\\\\n\\\\\\\\nimport \\\\\\\\\\\\"../utils/Context.sol\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\\\\\n * specific functions.\\\\\\\\n *\\\\\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\\\\\n * can later be changed with {transferOwnership}.\\\\\\\\n *\\\\\\\\n * This module is used through inheritance. It will make available the modifier\\\\\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\\\\\n * the owner.\\\\\\\\n */\\\\\\\\nabstract contract Ownable is Context {\\\\\\\\n    address private _owner;\\\\\\\\n\\\\\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\\\\\n     */\\\\\\\\n    constructor() {\\\\\\\\n        _setOwner(_msgSender());\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Returns the address of the current owner.\\\\\\\\n     */\\\\\\\\n    function owner() public view virtual returns (address) {\\\\\\\\n        return _owner;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Throws if called by any account other than the owner.\\\\\\\\n     */\\\\\\\\n    modifier onlyOwner() {\\\\\\\\n        require(owner() == _msgSender(), \\\\\\\\\\\\"Ownable: caller is not the owner\\\\\\\\\\\\");\\\\\\\\n        _;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\\\\\n     *\\\\\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\\\\\n     * thereby removing any functionality that is only available to the owner.\\\\\\\\n     */\\\\\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\\\\\n        _setOwner(address(0));\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\\\\\n     * Can only be called by the current owner.\\\\\\\\n     */\\\\\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\\\\\n        require(newOwner != address(0), \\\\\\\\\\\\"Ownable: new owner is the zero address\\\\\\\\\\\\");\\\\\\\\n        _setOwner(newOwner);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function _setOwner(address newOwner) private {\\\\\\\\n        address oldOwner = _owner;\\\\\\\\n        _owner = newOwner;\\\\\\\\n        emit OwnershipTransferred(oldOwner, newOwner);\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\\\\",\\\\"license\\\\":\\\\"MIT\\\\"},\\\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\\":{\\\\"content\\\\":\\\\"// SPDX-License-Identifier: MIT\\\\\\\\n\\\\\\\\npragma solidity ^0.8.0;\\\\\\\\n\\\\\\\\n/**\\\\\\\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\\\\\\\n */\\\\\\\\ninterface IERC20 {\\\\\\\\n    /**\\\\\\\\n     * @dev Returns the amount of tokens in existence.\\\\\\\\n     */\\\\\\\\n    function totalSupply() external view returns (uint256);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\\\\\n     */\\\\\\\\n    function balanceOf(address account) external view returns (uint256);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Moves `amount` tokens from the caller\\\'s account to `recipient`.\\\\\\\\n     *\\\\\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\\\\\n     *\\\\\\\\n     * Emits a {Transfer} event.\\\\\\\\n     */\\\\\\\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\\\\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\\\\\n     * zero by default.\\\\\\\\n     *\\\\\\\\n     * This value changes when {approve} or {transferFrom} are called.\\\\\\\\n     */\\\\\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\\\'s tokens.\\\\\\\\n     *\\\\\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\\\\\n     *\\\\\\\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\\\\\n     * condition is to first reduce the spender\\\'s allowance to 0 and set the\\\\\\\\n     * desired value afterwards:\\\\\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\\\\\n     *\\\\\\\\n     * Emits an {Approval} event.\\\\\\\\n     */\\\\\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\\\\\n     * allowance mechanism. `amount` is then deducted from the caller\\\'s\\\\\\\\n     * allowance.\\\\\\\\n     *\\\\\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\\\\\n     *\\\\\\\\n     * Emits a {Transfer} event.\\\\\\\\n     */\\\\\\\\n    function transferFrom(\\\\\\\\n        address sender,\\\\\\\\n        address recipient,\\\\\\\\n        uint256 amount\\\\\\\\n    ) external returns (bool);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\\\\\n     * another (`to`).\\\\\\\\n     *\\\\\\\\n     * Note that `value` may be zero.\\\\\\\\n     */\\\\\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\\\\\n\\\\\\\\n    /**\\\\\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\\\\\n     * a call to {approve}. `value` is the new allowance.\\\\\\\\n     */\\\\\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\\\\",\\\\"license\\\\":\\\\"MIT\\\\"},\\\\"@openzeppelin/contracts/utils/Context.sol\\\\":{\\\\"content\\\\":\\\\"// SPDX-License-Identifier: MIT\\\\\\\\n\\\\\\\\npragma solidity ^0.8.0;\\\\\\\\n\\\\\\\\n/*\\\\\\\\n * @dev Provides information about the current execution context, including the\\\\\\\\n * sender of the transaction and its data. While these are generally available\\\\\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\\\\\n * manner, since when dealing with meta-transactions the account sending and\\\\\\\\n * paying for execution may not be the actual sender (as far as an application\\\\\\\\n * is concerned).\\\\\\\\n *\\\\\\\\n * This contract is only required for intermediate, library-like contracts.\\\\\\\\n */\\\\\\\\nabstract contract Context {\\\\\\\\n    function _msgSender() internal view virtual returns (address) {\\\\\\\\n        return msg.sender;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function _msgData() internal view virtual returns (bytes calldata) {\\\\\\\\n        return msg.data;\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\\\\",\\\\"license\\\\":\\\\"MIT\\\\"},\\\\"contracts/Interfaces/gmx/IPositionRouter.sol\\\\":{\\\\"content\\\\":\\\\"// SPDX-License-Identifier: MIT\\\\\\\\npragma solidity ^0.8.3;\\\\\\\\n\\\\\\\\ninterface IPositionRouter {\\\\\\\\n    function executeIncreasePositions(\\\\\\\\n        uint256 _count,\\\\\\\\n        address payable _executionFeeReceiver\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function executeDecreasePositions(\\\\\\\\n        uint256 _count,\\\\\\\\n        address payable _executionFeeReceiver\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function createIncreasePosition(\\\\\\\\n        address[] memory _path,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _amountIn,\\\\\\\\n        uint256 _minOut,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        uint256 _acceptablePrice,\\\\\\\\n        uint256 _executionFee,\\\\\\\\n        bytes32 _referralCode\\\\\\\\n    ) external payable;\\\\\\\\n\\\\\\\\n    function createDecreasePosition(\\\\\\\\n        address[] memory _path,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _collateralDelta,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        address _receiver,\\\\\\\\n        uint256 _acceptablePrice,\\\\\\\\n        uint256 _minOut,\\\\\\\\n        uint256 _executionFee,\\\\\\\\n        bool _withdrawETH\\\\\\\\n    ) external payable;\\\\\\\\n\\\\\\\\n    function minExecutionFee() external view returns (uint256 minExecutionFee);\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0xd271f38e4d363bdacff1385853c8c5b20396549151a50da2f93eb27a114f90c4\\\\",\\\\"license\\\\":\\\\"MIT\\\\"},\\\\"contracts/Interfaces/gmx/IRouter.sol\\\\":{\\\\"content\\\\":\\\\"// SPDX-License-Identifier: MIT\\\\\\\\n\\\\\\\\npragma solidity ^0.8.3;\\\\\\\\n\\\\\\\\ninterface IRouter {\\\\\\\\n    function addPlugin(address _plugin) external;\\\\\\\\n\\\\\\\\n    function pluginTransfer(\\\\\\\\n        address _token,\\\\\\\\n        address _account,\\\\\\\\n        address _receiver,\\\\\\\\n        uint256 _amount\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function pluginIncreasePosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function pluginDecreasePosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _collateralDelta,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        address _receiver\\\\\\\\n    ) external returns (uint256);\\\\\\\\n\\\\\\\\n    function swap(\\\\\\\\n        address[] memory _path,\\\\\\\\n        uint256 _amountIn,\\\\\\\\n        uint256 _minOut,\\\\\\\\n        address _receiver\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function approvePlugin(address _plugin) external;\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0x09366b7644f8fe0498adc402598ccb8045a3b6d160ecbd6b9b755c2089d00b0c\\\\",\\\\"license\\\\":\\\\"MIT\\\\"},\\\\"contracts/Interfaces/gmx/IVault.sol\\\\":{\\\\"content\\\\":\\\\"// SPDX-License-Identifier: MIT\\\\\\\\npragma solidity ^0.8.3;\\\\\\\\n\\\\\\\\nimport \\\\\\\\\\\\"./IVaultUtils.sol\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\ninterface IVault {\\\\\\\\n    function isInitialized() external view returns (bool);\\\\\\\\n\\\\\\\\n    function isSwapEnabled() external view returns (bool);\\\\\\\\n\\\\\\\\n    function isLeverageEnabled() external view returns (bool);\\\\\\\\n\\\\\\\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\\\\\\\n\\\\\\\\n    function setError(uint256 _errorCode, string calldata _error) external;\\\\\\\\n\\\\\\\\n    function router() external view returns (address);\\\\\\\\n\\\\\\\\n    function usdg() external view returns (address);\\\\\\\\n\\\\\\\\n    function gov() external view returns (address);\\\\\\\\n\\\\\\\\n    function whitelistedTokenCount() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function maxLeverage() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function minProfitTime() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function hasDynamicFees() external view returns (bool);\\\\\\\\n\\\\\\\\n    function fundingInterval() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function totalTokenWeights() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getTargetUsdgAmount(address _token)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function inManagerMode() external view returns (bool);\\\\\\\\n\\\\\\\\n    function inPrivateLiquidationMode() external view returns (bool);\\\\\\\\n\\\\\\\\n    function maxGasPrice() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function approvedRouters(address _account, address _router)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (bool);\\\\\\\\n\\\\\\\\n    function isLiquidator(address _account) external view returns (bool);\\\\\\\\n\\\\\\\\n    function isManager(address _account) external view returns (bool);\\\\\\\\n\\\\\\\\n    function minProfitBasisPoints(address _token)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function tokenBalances(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function lastFundingTimes(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\\\\\\\n\\\\\\\\n    function setInManagerMode(bool _inManagerMode) external;\\\\\\\\n\\\\\\\\n    function setManager(address _manager, bool _isManager) external;\\\\\\\\n\\\\\\\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\\\\\\\n\\\\\\\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\\\\\\\n\\\\\\\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\\\\\\\n\\\\\\\\n    function setUsdgAmount(address _token, uint256 _amount) external;\\\\\\\\n\\\\\\\\n    function setBufferAmount(address _token, uint256 _amount) external;\\\\\\\\n\\\\\\\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\\\\\\\n\\\\\\\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode)\\\\\\\\n        external;\\\\\\\\n\\\\\\\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\\\\\\\n\\\\\\\\n    function setFundingRate(\\\\\\\\n        uint256 _fundingInterval,\\\\\\\\n        uint256 _fundingRateFactor,\\\\\\\\n        uint256 _stableFundingRateFactor\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function setFees(\\\\\\\\n        uint256 _taxBasisPoints,\\\\\\\\n        uint256 _stableTaxBasisPoints,\\\\\\\\n        uint256 _mintBurnFeeBasisPoints,\\\\\\\\n        uint256 _swapFeeBasisPoints,\\\\\\\\n        uint256 _stableSwapFeeBasisPoints,\\\\\\\\n        uint256 _marginFeeBasisPoints,\\\\\\\\n        uint256 _liquidationFeeUsd,\\\\\\\\n        uint256 _minProfitTime,\\\\\\\\n        bool _hasDynamicFees\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function setTokenConfig(\\\\\\\\n        address _token,\\\\\\\\n        uint256 _tokenDecimals,\\\\\\\\n        uint256 _redemptionBps,\\\\\\\\n        uint256 _minProfitBps,\\\\\\\\n        uint256 _maxUsdgAmount,\\\\\\\\n        bool _isStable,\\\\\\\\n        bool _isShortable\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function setPriceFeed(address _priceFeed) external;\\\\\\\\n\\\\\\\\n    function withdrawFees(address _token, address _receiver)\\\\\\\\n        external\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function directPoolDeposit(address _token) external;\\\\\\\\n\\\\\\\\n    function buyUSDG(address _token, address _receiver)\\\\\\\\n        external\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function sellUSDG(address _token, address _receiver)\\\\\\\\n        external\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function swap(\\\\\\\\n        address _tokenIn,\\\\\\\\n        address _tokenOut,\\\\\\\\n        address _receiver\\\\\\\\n    ) external returns (uint256);\\\\\\\\n\\\\\\\\n    function increasePosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function decreasePosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _collateralDelta,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        address _receiver\\\\\\\\n    ) external returns (uint256);\\\\\\\\n\\\\\\\\n    function liquidatePosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        bool _isLong,\\\\\\\\n        address _feeReceiver\\\\\\\\n    ) external;\\\\\\\\n\\\\\\\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function priceFeed() external view returns (address);\\\\\\\\n\\\\\\\\n    function fundingRateFactor() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function stableFundingRateFactor() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function cumulativeFundingRates(address _token)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function getNextFundingRate(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getFeeBasisPoints(\\\\\\\\n        address _token,\\\\\\\\n        uint256 _usdgDelta,\\\\\\\\n        uint256 _feeBasisPoints,\\\\\\\\n        uint256 _taxBasisPoints,\\\\\\\\n        bool _increment\\\\\\\\n    ) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function liquidationFeeUsd() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function taxBasisPoints() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function stableTaxBasisPoints() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function swapFeeBasisPoints() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function marginFeeBasisPoints() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function allWhitelistedTokensLength() external view returns (uint256);\\\\\\\\n\\\\\\\\n    function allWhitelistedTokens(uint256) external view returns (address);\\\\\\\\n\\\\\\\\n    function whitelistedTokens(address _token) external view returns (bool);\\\\\\\\n\\\\\\\\n    function stableTokens(address _token) external view returns (bool);\\\\\\\\n\\\\\\\\n    function shortableTokens(address _token) external view returns (bool);\\\\\\\\n\\\\\\\\n    function feeReserves(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function globalShortSizes(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function globalShortAveragePrices(address _token)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function maxGlobalShortSizes(address _token)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function tokenDecimals(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function tokenWeights(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function guaranteedUsd(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function poolAmounts(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function bufferAmounts(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function reservedAmounts(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function usdgAmounts(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function maxUsdgAmounts(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getRedemptionAmount(address _token, uint256 _usdgAmount)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function getMaxPrice(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getMinPrice(address _token) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getDelta(\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _size,\\\\\\\\n        uint256 _averagePrice,\\\\\\\\n        bool _isLong,\\\\\\\\n        uint256 _lastIncreasedTime\\\\\\\\n    ) external view returns (bool, uint256);\\\\\\\\n\\\\\\\\n    function getPositionDelta(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        bool _isLong\\\\\\\\n    ) external view returns (bool, uint256);\\\\\\\\n\\\\\\\\n    function getPosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        bool _isLong\\\\\\\\n    )\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (\\\\\\\\n            uint256,\\\\\\\\n            uint256,\\\\\\\\n            uint256,\\\\\\\\n            uint256,\\\\\\\\n            uint256,\\\\\\\\n            uint256,\\\\\\\\n            bool,\\\\\\\\n            uint256\\\\\\\\n        );\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0x42888d9d5b2b53cab92b9b053305906f6d654cecf24cfeccc945f28e8152b691\\\\",\\\\"license\\\\":\\\\"MIT\\\\"},\\\\"contracts/Interfaces/gmx/IVaultUtils.sol\\\\":{\\\\"content\\\\":\\\\"// SPDX-License-Identifier: MIT\\\\\\\\npragma solidity ^0.8.3;\\\\\\\\n\\\\\\\\ninterface IVaultUtils {\\\\\\\\n    function updateCumulativeFundingRate(\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken\\\\\\\\n    ) external returns (bool);\\\\\\\\n\\\\\\\\n    function validateIncreasePosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong\\\\\\\\n    ) external view;\\\\\\\\n\\\\\\\\n    function validateDecreasePosition(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _collateralDelta,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        address _receiver\\\\\\\\n    ) external view;\\\\\\\\n\\\\\\\\n    function validateLiquidation(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        bool _isLong,\\\\\\\\n        bool _raise\\\\\\\\n    ) external view returns (uint256, uint256);\\\\\\\\n\\\\\\\\n    function getEntryFundingRate(\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        bool _isLong\\\\\\\\n    ) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getPositionFee(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        bool _isLong,\\\\\\\\n        uint256 _sizeDelta\\\\\\\\n    ) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getFundingFee(\\\\\\\\n        address _account,\\\\\\\\n        address _collateralToken,\\\\\\\\n        address _indexToken,\\\\\\\\n        bool _isLong,\\\\\\\\n        uint256 _size,\\\\\\\\n        uint256 _entryFundingRate\\\\\\\\n    ) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getBuyUsdgFeeBasisPoints(address _token, uint256 _usdgAmount)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function getSellUsdgFeeBasisPoints(address _token, uint256 _usdgAmount)\\\\\\\\n        external\\\\\\\\n        view\\\\\\\\n        returns (uint256);\\\\\\\\n\\\\\\\\n    function getSwapFeeBasisPoints(\\\\\\\\n        address _tokenIn,\\\\\\\\n        address _tokenOut,\\\\\\\\n        uint256 _usdgAmount\\\\\\\\n    ) external view returns (uint256);\\\\\\\\n\\\\\\\\n    function getFeeBasisPoints(\\\\\\\\n        address _token,\\\\\\\\n        uint256 _usdgDelta,\\\\\\\\n        uint256 _feeBasisPoints,\\\\\\\\n        uint256 _taxBasisPoints,\\\\\\\\n        bool _increment\\\\\\\\n    ) external view returns (uint256);\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0xae78607144d838a4cd8ae762ebbf2194343220b74326f45e6b9092e2b7403809\\\\",\\\\"license\\\\":\\\\"MIT\\\\"},\\\\"contracts/NoLoss/NoLoss.sol\\\\":{\\\\"content\\\\":\\\\"pragma solidity ^0.8.3;\\\\\\\\n\\\\\\\\nimport \\\\\\\\\\\\"../Interfaces/gmx/IVault.sol\\\\\\\\\\\\";\\\\\\\\nimport \\\\\\\\\\\\"./PositionHandler.sol\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\nabstract contract NoLoss is Ownable {\\\\\\\\n    IPositionRouter public immutable positionRouter;\\\\\\\\n    IVault public immutable vault;\\\\\\\\n    IRouter public immutable router;\\\\\\\\n    IERC20 public immutable collateralToken;\\\\\\\\n    IERC20 public immutable USDC;\\\\\\\\n    address public immutable indexToken;\\\\\\\\n    address public coverAddress;\\\\\\\\n    uint256 internal constant AMOUNT_DECIMALS = 1e18;\\\\\\\\n    uint256 internal constant GMX_DECIMALS = 1e30;\\\\\\\\n    uint256 public positionId = 0;\\\\\\\\n    uint256 public maxAmount = 1e18;\\\\\\\\n    uint256 public minAmount = 1e16;\\\\\\\\n    uint256 public executionFee;\\\\\\\\n    uint8 public minStop = 2;\\\\\\\\n    uint8 public maxStop = 5;\\\\\\\\n    uint8 public minLeverage = 2;\\\\\\\\n    uint8 public maxLeverage = 8;\\\\\\\\n    uint8 public comissionCoef = 10;\\\\\\\\n    uint8 public leverageComissionCoef = 0;\\\\\\\\n    address public executor;\\\\\\\\n    int256 public openSlippage;\\\\\\\\n    int256 public closeSlippage;\\\\\\\\n\\\\\\\\n    enum PositionState {Open, WaitPaid, Close}\\\\\\\\n\\\\\\\\n    struct Position {\\\\\\\\n        PositionState state;\\\\\\\\n        address user;\\\\\\\\n        uint256 positionSize;\\\\\\\\n        uint256 openPrice;\\\\\\\\n        uint256 closePrice;\\\\\\\\n        uint32 expiration;\\\\\\\\n        bool isLong;\\\\\\\\n        uint8 comission;\\\\\\\\n        uint256 collateral;\\\\\\\\n        uint8 stop;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    mapping(uint256 => Position) public positions;\\\\\\\\n    mapping(uint256 => uint256) public takes;\\\\\\\\n    mapping(address => address) public userContractAddress;\\\\\\\\n    mapping(address => uint8) public positionsLimit;\\\\\\\\n    mapping(address => uint256) public userContractIdPosition;\\\\\\\\n\\\\\\\\n    event SetMaxAmount(uint256 amount);\\\\\\\\n    event SetMinAmount(uint256 amount);\\\\\\\\n    event SetStopLimits(uint8 min, uint8 max);\\\\\\\\n    event SetLeverageLimits(uint8 min, uint8 max);\\\\\\\\n    event SetComissionCoef(uint256 leverage);\\\\\\\\n    event SetLeverageComissionCoef(uint256 leverage);\\\\\\\\n    event SetTake(uint256 id, uint256 price);\\\\\\\\n    event SetPositionsLimit(address user, uint8 limit);\\\\\\\\n\\\\\\\\n    event OpenNoLoss(\\\\\\\\n        uint256 id,\\\\\\\\n        address user,\\\\\\\\n        uint256 positionSize,\\\\\\\\n        uint256 collateral,\\\\\\\\n        uint256 swapPrice,\\\\\\\\n        uint8 comissionCoef\\\\\\\\n    );\\\\\\\\n    event CloseNoLoss(uint256 id);\\\\\\\\n    event PaidNoLoss(\\\\\\\\n        uint256 id,\\\\\\\\n        uint256 comission,\\\\\\\\n        uint256 returnValue,\\\\\\\\n        uint256 swapPrice\\\\\\\\n    );\\\\\\\\n\\\\\\\\n    constructor(\\\\\\\\n        address _coverAddress,\\\\\\\\n        IPositionRouter _positionRouter,\\\\\\\\n        IVault _vault,\\\\\\\\n        IRouter _router,\\\\\\\\n        IERC20 _collateralToken,\\\\\\\\n        IERC20 _USDC,\\\\\\\\n        address _indexToken,\\\\\\\\n        int256 _openSlippage,\\\\\\\\n        int256 _closeSlippage\\\\\\\\n    ) {\\\\\\\\n        coverAddress = _coverAddress;\\\\\\\\n        positionRouter = _positionRouter;\\\\\\\\n        vault = _vault;\\\\\\\\n        router = _router;\\\\\\\\n        collateralToken = _collateralToken;\\\\\\\\n        USDC = _USDC;\\\\\\\\n        indexToken = _indexToken;\\\\\\\\n        openSlippage = _openSlippage;\\\\\\\\n        closeSlippage = _closeSlippage;\\\\\\\\n        executionFee = _positionRouter.minExecutionFee();\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function deposit() public payable {}\\\\\\\\n\\\\\\\\n    function withdrawETH() external onlyOwner {\\\\\\\\n        payable(msg.sender).transfer(address(this).balance);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setExecutor(address value) external onlyOwner {\\\\\\\\n        executor = value;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setCoverAddress(address value) external onlyOwner {\\\\\\\\n        coverAddress = value;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setMaxAmount(uint256 value) external onlyOwner {\\\\\\\\n        maxAmount = value;\\\\\\\\n        emit SetMaxAmount(value);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setMinAmount(uint256 value) external onlyOwner {\\\\\\\\n        maxAmount = value;\\\\\\\\n        emit SetMinAmount(value);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setExecutionFee(uint256 value) external onlyOwner {\\\\\\\\n        executionFee = value;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setSlippage(int8 open, int8 close) external onlyOwner {\\\\\\\\n        openSlippage = open;\\\\\\\\n        closeSlippage = close;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setStopLimits(uint8 min, uint8 max) external onlyOwner {\\\\\\\\n        minStop = min;\\\\\\\\n        maxStop = max;\\\\\\\\n        emit SetStopLimits(min, max);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setLeverageLimits(uint8 min, uint8 max) external onlyOwner {\\\\\\\\n        minLeverage = min;\\\\\\\\n        maxLeverage = max;\\\\\\\\n        emit SetLeverageLimits(min, max);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setComissionCoef(uint8 value) external onlyOwner {\\\\\\\\n        comissionCoef = value;\\\\\\\\n        emit SetComissionCoef(value);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setLeverageComissionCoef(uint8 value) external onlyOwner {\\\\\\\\n        leverageComissionCoef = value;\\\\\\\\n        emit SetLeverageComissionCoef(value);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setTake(uint256 id, uint256 price) public {\\\\\\\\n        Position storage position = positions[id];\\\\\\\\n        if (msg.sender != owner() && msg.sender != executor) {\\\\\\\\n            require(\\\\\\\\n                msg.sender == position.user,\\\\\\\\n                \\\\\\\\\\\\"you are not the option owner\\\\\\\\\\\\"\\\\\\\\n            );\\\\\\\\n        }\\\\\\\\n        takes[id] = price;\\\\\\\\n        emit SetTake(id, price);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function _paidStop(uint256 amount, address addressee) internal {\\\\\\\\n        USDC.transferFrom(coverAddress, addressee, amount);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function paidStopByUser(uint256 amount, address addressee)\\\\\\\\n        external\\\\\\\\n        onlyOwner\\\\\\\\n    {\\\\\\\\n        _paidStop(amount, addressee);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function setPositionsLimit(address user, uint8 limit) external onlyOwner {\\\\\\\\n        positionsLimit[user] = limit;\\\\\\\\n        emit SetPositionsLimit(user, limit);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function userRegistration(address user) external onlyOwner {\\\\\\\\n        PositionHandler uc =\\\\\\\\n            new PositionHandler(\\\\\\\\n                positionRouter,\\\\\\\\n                router,\\\\\\\\n                collateralToken,\\\\\\\\n                owner()\\\\\\\\n            );\\\\\\\\n        userContractAddress[user] = address(uc);\\\\\\\\n        positionsLimit[user] = 2;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function userAllApproves(address user) public onlyOwner {\\\\\\\\n        PositionHandler(userContractAddress[user]).approveAll(\\\\\\\\n            address(positionRouter),\\\\\\\\n            address(router),\\\\\\\\n            address(this),\\\\\\\\n            type(uint256).max\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function getProfitSwap(uint256 id) public view returns (bool, uint256) {\\\\\\\\n        Position storage data = positions[id];\\\\\\\\n        return\\\\\\\\n            vault.getPositionDelta(\\\\\\\\n                userContractAddress[data.user],\\\\\\\\n                address(collateralToken),\\\\\\\\n                indexToken,\\\\\\\\n                data.isLong\\\\\\\\n            );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function getPosition(uint256 id)\\\\\\\\n        public\\\\\\\\n        view\\\\\\\\n        returns (\\\\\\\\n            uint256 size,\\\\\\\\n            uint256 collateral,\\\\\\\\n            uint256 averagePrice,\\\\\\\\n            uint256 entryFundingRate,\\\\\\\\n            uint256 reserveAmount,\\\\\\\\n            uint256 realisedPnl\\\\\\\\n        )\\\\\\\\n    {\\\\\\\\n        Position storage data = positions[id];\\\\\\\\n        (size,collateral,averagePrice,entryFundingRate,reserveAmount,realisedPnl,,) = vault.getPosition(\\\\\\\\n                userContractAddress[data.user],\\\\\\\\n                address(collateralToken),\\\\\\\\n                indexToken,\\\\\\\\n                data.isLong\\\\\\\\n            );\\\\\\\\n        if (averagePrice == 0) {\\\\\\\\n            averagePrice = data.openPrice;\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function currentPrice(bool isMax) public view returns (uint256) {\\\\\\\\n        if (isMax) {\\\\\\\\n            return vault.getMaxPrice(indexToken);\\\\\\\\n        }\\\\\\\\n        return vault.getMinPrice(indexToken);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function _calculateCollateral(uint256 amount, uint256 swapOpenPrice)\\\\\\\\n        internal\\\\\\\\n        virtual\\\\\\\\n        returns (uint256)\\\\\\\\n    {}\\\\\\\\n\\\\\\\\n    function _checkParams(\\\\\\\\n        uint256 amount,\\\\\\\\n        uint8 stop,\\\\\\\\n        uint256 take,\\\\\\\\n        uint8 leverage,\\\\\\\\n        bool isLong,\\\\\\\\n        uint256 swapPrice\\\\\\\\n    ) internal view {\\\\\\\\n        uint8 positionLimit = positionsLimit[msg.sender];\\\\\\\\n        require(positionLimit != 0, \\\\\\\\\\\\"limit is reached\\\\\\\\\\\\");\\\\\\\\n        require(stop >= minStop, \\\\\\\\\\\\"stop is too small\\\\\\\\\\\\");\\\\\\\\n        require(stop <= maxStop, \\\\\\\\\\\\"stop is too big\\\\\\\\\\\\");\\\\\\\\n        require(leverage >= minLeverage, \\\\\\\\\\\\"leverage is too small\\\\\\\\\\\\");\\\\\\\\n        require(leverage <= maxLeverage, \\\\\\\\\\\\"leverage is too big\\\\\\\\\\\\");\\\\\\\\n        require(amount <= maxAmount, \\\\\\\\\\\\"amount is too big\\\\\\\\\\\\");\\\\\\\\n        require(amount >= minAmount, \\\\\\\\\\\\"amount is too small\\\\\\\\\\\\");\\\\\\\\n        (uint256 positionSize, , , , , , ,) =\\\\\\\\n            vault.getPosition(\\\\\\\\n                userContractAddress[msg.sender],\\\\\\\\n                address(collateralToken),\\\\\\\\n                indexToken,\\\\\\\\n                isLong\\\\\\\\n            );\\\\\\\\n        require(positionSize == 0, \\\\\\\\\\\\"you already have an open position\\\\\\\\\\\\");\\\\\\\\n        if (isLong) {\\\\\\\\n            require(take > swapPrice, \\\\\\\\\\\\"take less than the opening price\\\\\\\\\\\\");\\\\\\\\n        } else {\\\\\\\\n            require(take < swapPrice, \\\\\\\\\\\\"take more than the opening price\\\\\\\\\\\\");\\\\\\\\n        }\\\\\\\\n        uint256 balanceCollateralToken =\\\\\\\\n            collateralToken.balanceOf(userContractAddress[msg.sender]);\\\\\\\\n        require(balanceCollateralToken == 0, \\\\\\\\\\\\"balance is null\\\\\\\\\\\\");\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function openSwap(\\\\\\\\n        uint256 amount,\\\\\\\\n        uint8 stop,\\\\\\\\n        uint256 take,\\\\\\\\n        uint8 leverage,\\\\\\\\n        bool isLong\\\\\\\\n    ) internal {\\\\\\\\n        uint256 swapPrice = currentPrice(isLong);\\\\\\\\n        _checkParams(amount, stop, take, leverage, isLong, swapPrice);\\\\\\\\n        uint256 collateralValue = _calculateCollateral(amount, swapPrice);\\\\\\\\n        collateralToken.transferFrom(\\\\\\\\n            msg.sender,\\\\\\\\n            address(userContractAddress[msg.sender]),\\\\\\\\n            collateralValue\\\\\\\\n        );\\\\\\\\n        uint256 amountValue =\\\\\\\\n            ((amount * swapPrice) / AMOUNT_DECIMALS) * leverage;\\\\\\\\n        uint256 openPrice =\\\\\\\\n            (swapPrice / 1000) * uint256(int256(1000) + openSlippage);\\\\\\\\n        _createIncreasePosition(\\\\\\\\n            msg.sender,\\\\\\\\n            collateralArray(),\\\\\\\\n            indexToken,\\\\\\\\n            collateralValue,\\\\\\\\n            0,\\\\\\\\n            amountValue,\\\\\\\\n            isLong,\\\\\\\\n            openPrice,\\\\\\\\n            executionFee,\\\\\\\\n            0\\\\\\\\n        );\\\\\\\\n        uint8 comission =\\\\\\\\n            stop * comissionCoef + (leverage > 2 ? leverageComissionCoef : 0);\\\\\\\\n        positions[positionId] = Position(\\\\\\\\n            PositionState.Open,\\\\\\\\n            msg.sender,\\\\\\\\n            amount * leverage,\\\\\\\\n            0,\\\\\\\\n            0,\\\\\\\\n            uint32(block.timestamp + 30 days),\\\\\\\\n            isLong,\\\\\\\\n            comission,\\\\\\\\n            collateralValue,\\\\\\\\n            stop\\\\\\\\n        );\\\\\\\\n        userContractIdPosition[userContractAddress[msg.sender]] = positionId;\\\\\\\\n\\\\\\\\n        setTake(positionId, take);\\\\\\\\n        emit OpenNoLoss(\\\\\\\\n            positionId,\\\\\\\\n            msg.sender,\\\\\\\\n            amount * leverage,\\\\\\\\n            collateralValue,\\\\\\\\n            swapPrice,\\\\\\\\n            comission\\\\\\\\n        );\\\\\\\\n        positionId += 1;\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function closeSwap(uint256 id) internal {\\\\\\\\n        Position storage position = positions[id];\\\\\\\\n        require(position.state == PositionState.Open, \\\\\\\\\\\\"position is closed\\\\\\\\\\\\");\\\\\\\\n        if (msg.sender != owner() && msg.sender != executor) {\\\\\\\\n            require(\\\\\\\\n                msg.sender == position.user,\\\\\\\\n                \\\\\\\\\\\\"you are not the owner of the position\\\\\\\\\\\\"\\\\\\\\n            );\\\\\\\\n        }\\\\\\\\n        uint256 swapPrice = currentPrice(position.isLong);\\\\\\\\n        (uint256 size, uint256 collateral, uint256 openPrice, , , ) =\\\\\\\\n            getPosition(id);\\\\\\\\n        require(size != 0, \\\\\\\\\\\\"position size is null\\\\\\\\\\\\");\\\\\\\\n        if (position.isLong) {\\\\\\\\n            if (swapPrice >= openPrice) {\\\\\\\\n                require(swapPrice >= openPrice/100*101, \\\\\\\\\\\\"too little price change\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        } else {\\\\\\\\n            if (swapPrice <= openPrice) {\\\\\\\\n                require(swapPrice <= openPrice/100*99, \\\\\\\\\\\\"too little price change\\\\\\\\\\\\");\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n        (bool isProfit, uint256 delta) = getProfitSwap(id);\\\\\\\\n        if (isProfit == false) {\\\\\\\\n            if (\\\\\\\\n                position.isLong\\\\\\\\n                    ? swapPrice > calculateStopPrice(id)\\\\\\\\n                    : swapPrice < calculateStopPrice(id)\\\\\\\\n            ) {\\\\\\\\n                require(\\\\\\\\n                    block.timestamp > position.expiration - 30 * 60,\\\\\\\\n                    \\\\\\\\\\\\"too early\\\\\\\\\\\\"\\\\\\\\n                );\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n        uint256 closeValue = (isProfit ? collateral : delta);\\\\\\\\n        uint256 closePrice =\\\\\\\\n            (swapPrice / 1000) * uint256(int256(1000) + closeSlippage);\\\\\\\\n        address user = position.user;\\\\\\\\n        _createDecreasePosition(\\\\\\\\n            user,\\\\\\\\n            collateralArray(),\\\\\\\\n            indexToken,\\\\\\\\n            closeValue,\\\\\\\\n            size,\\\\\\\\n            position.isLong,\\\\\\\\n            userContractAddress[user],\\\\\\\\n            closePrice,\\\\\\\\n            0,\\\\\\\\n            executionFee,\\\\\\\\n            false\\\\\\\\n        );\\\\\\\\n        position.openPrice = openPrice;\\\\\\\\n        position.closePrice = swapPrice;\\\\\\\\n        position.state = PositionState.WaitPaid;\\\\\\\\n        emit CloseNoLoss(id);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function pay(uint256 id) external {\\\\\\\\n        Position storage position = positions[id];\\\\\\\\n        require(position.state == PositionState.WaitPaid, \\\\\\\\\\\\"position is closed\\\\\\\\\\\\");\\\\\\\\n        if (msg.sender != owner() && msg.sender != executor) {\\\\\\\\n            require(\\\\\\\\n                msg.sender == position.user,\\\\\\\\n                \\\\\\\\\\\\"you are not the owner of the position\\\\\\\\\\\\"\\\\\\\\n            );\\\\\\\\n        }\\\\\\\\n        (uint256 size, , , , , ) = getPosition(id);\\\\\\\\n        require(size == 0, \\\\\\\\\\\\"position is open\\\\\\\\\\\\");\\\\\\\\n        uint256 balanceCollateralToken =\\\\\\\\n            collateralToken.balanceOf(userContractAddress[position.user]);\\\\\\\\n        require(balanceCollateralToken != 0, \\\\\\\\\\\\"balance is null\\\\\\\\\\\\");\\\\\\\\n        uint256 positionSize = position.positionSize;\\\\\\\\n        if (!position.isLong) {\\\\\\\\n            positionSize = position.positionSize * position.openPrice/(GMX_DECIMALS*AMOUNT_DECIMALS/1e6);\\\\\\\\n        }\\\\\\\\n        bool isProfit = balanceCollateralToken > position.collateral;\\\\\\\\n        uint256 returnValue;\\\\\\\\n        uint256 comissionValue = 0;\\\\\\\\n        if (isProfit) {\\\\\\\\n            comissionValue = ((balanceCollateralToken - position.collateral) / 100) * position.comission;\\\\\\\\n            returnValue = balanceCollateralToken - comissionValue;\\\\\\\\n        } else {\\\\\\\\n            returnValue = balanceCollateralToken;\\\\\\\\n            _paidStop(calculateStopMaxAmount(id), position.user);\\\\\\\\n            positionsLimit[position.user] -= 1;\\\\\\\\n        }\\\\\\\\n        collateralToken.transferFrom(\\\\\\\\n            userContractAddress[position.user],\\\\\\\\n            position.user,\\\\\\\\n            returnValue\\\\\\\\n        );\\\\\\\\n        if (comissionValue != 0) {\\\\\\\\n            collateralToken.transferFrom(\\\\\\\\n                userContractAddress[position.user],\\\\\\\\n                address(this),\\\\\\\\n                comissionValue\\\\\\\\n            );\\\\\\\\n        }\\\\\\\\n        position.state = PositionState.Close;\\\\\\\\n        emit PaidNoLoss(id, comissionValue, returnValue, position.closePrice);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function calculateStopPrice(uint256 id) public view returns (uint256 stop) {\\\\\\\\n        (, , uint256 openPrice, , ,  ) = getPosition(id);\\\\\\\\n        Position storage data = positions[id];\\\\\\\\n        if (openPrice == 0) {\\\\\\\\n            if (data.isLong) {\\\\\\\\n                return (data.openPrice / 100) * (100 - data.stop);\\\\\\\\n            } else {\\\\\\\\n                return (data.openPrice / 100) * (100 + data.stop);\\\\\\\\n            }\\\\\\\\n        } else {\\\\\\\\n            if (data.isLong) {\\\\\\\\n                return (openPrice / 100) * (100 - data.stop);\\\\\\\\n            } else {\\\\\\\\n                return (openPrice / 100) * (100 + data.stop);\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function calculateStopMaxAmount(uint256 id)\\\\\\\\n        public\\\\\\\\n        view\\\\\\\\n        returns (uint256 stopAmount)\\\\\\\\n    {\\\\\\\\n        (, , uint256 openPrice, , ,  ) = getPosition(id);\\\\\\\\n        Position storage data = positions[id];\\\\\\\\n        if (openPrice == 0) {\\\\\\\\n            return\\\\\\\\n                ((data.openPrice / 100) * data.stop * data.positionSize) /\\\\\\\\n                ((GMX_DECIMALS * AMOUNT_DECIMALS) / 1e6);\\\\\\\\n        } else {\\\\\\\\n            return\\\\\\\\n                ((openPrice / 100) * data.stop * data.positionSize) /\\\\\\\\n                ((GMX_DECIMALS * AMOUNT_DECIMALS) / 1e6);\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function calculateStopProfitOf(uint256 id)\\\\\\\\n        public\\\\\\\\n        view\\\\\\\\n        returns (uint256 stop)\\\\\\\\n    {\\\\\\\\n        (, , uint256 openPrice, , ,  ) = getPosition(id);\\\\\\\\n        Position storage data = positions[id];\\\\\\\\n        uint256 swapPrice = currentPrice(data.isLong);\\\\\\\\n        if (openPrice == 0) {\\\\\\\\n            if (data.isLong) {\\\\\\\\n                if (swapPrice >= data.openPrice) {\\\\\\\\n                    return 0;\\\\\\\\n                } else {\\\\\\\\n                    return\\\\\\\\n                        ((data.openPrice - swapPrice) * data.positionSize) /\\\\\\\\n                        ((GMX_DECIMALS * AMOUNT_DECIMALS) / 1e6);\\\\\\\\n                }\\\\\\\\n            } else {\\\\\\\\n                if (swapPrice <= data.openPrice) {\\\\\\\\n                    return 0;\\\\\\\\n                } else {\\\\\\\\n                    return\\\\\\\\n                        ((swapPrice - data.openPrice) * data.positionSize) /\\\\\\\\n                        ((GMX_DECIMALS * AMOUNT_DECIMALS) / 1e6);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        } else {\\\\\\\\n            if (data.isLong) {\\\\\\\\n                if (swapPrice >= openPrice) {\\\\\\\\n                    return 0;\\\\\\\\n                } else {\\\\\\\\n                    return\\\\\\\\n                        ((openPrice - swapPrice) * data.positionSize) /\\\\\\\\n                        ((GMX_DECIMALS * AMOUNT_DECIMALS) / 1e6);\\\\\\\\n                }\\\\\\\\n            } else {\\\\\\\\n                if (swapPrice <= openPrice) {\\\\\\\\n                    return 0;\\\\\\\\n                } else {\\\\\\\\n                    return\\\\\\\\n                        ((swapPrice - openPrice) * data.positionSize) /\\\\\\\\n                        ((GMX_DECIMALS * AMOUNT_DECIMALS) / 1e6);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function withdrawErc20(IERC20 token) external onlyOwner {\\\\\\\\n        token.transfer(msg.sender, token.balanceOf(address(this)));\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function withdrawErc20UserAccount(address user, IERC20 token)\\\\\\\\n        external\\\\\\\\n        onlyOwner\\\\\\\\n    {\\\\\\\\n        PositionHandler(userContractAddress[user]).withdrawErc20(token);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function closeTake(uint256 id) external {\\\\\\\\n        Position storage position = positions[id];\\\\\\\\n        uint256 lastPrice = currentPrice(position.isLong);\\\\\\\\n        if (position.isLong) {\\\\\\\\n            require(lastPrice >= takes[id], \\\\\\\\\\\\"price below trigger\\\\\\\\\\\\");\\\\\\\\n        } else {\\\\\\\\n            require(lastPrice <= takes[id], \\\\\\\\\\\\"price above trigger\\\\\\\\\\\\");\\\\\\\\n        }\\\\\\\\n        closeSwap(id);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function createIncreasePosition(\\\\\\\\n        address _user,\\\\\\\\n        address[] memory _path,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _amountIn,\\\\\\\\n        uint256 _minOut,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        uint256 _acceptablePrice,\\\\\\\\n        uint256 _executionFee,\\\\\\\\n        bytes32 _referralCode\\\\\\\\n    ) external payable onlyOwner {\\\\\\\\n        _createIncreasePosition(\\\\\\\\n            _user,\\\\\\\\n            _path,\\\\\\\\n            _indexToken,\\\\\\\\n            _amountIn,\\\\\\\\n            _minOut,\\\\\\\\n            _sizeDelta,\\\\\\\\n            _isLong,\\\\\\\\n            _acceptablePrice,\\\\\\\\n            _executionFee,\\\\\\\\n            _referralCode\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function _createIncreasePosition(\\\\\\\\n        address _user,\\\\\\\\n        address[] memory _path,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _amountIn,\\\\\\\\n        uint256 _minOut,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        uint256 _acceptablePrice,\\\\\\\\n        uint256 _executionFee,\\\\\\\\n        bytes32 _referralCode\\\\\\\\n    ) internal {\\\\\\\\n        PositionHandler(userContractAddress[_user]).increasePosition{\\\\\\\\n            value: _executionFee\\\\\\\\n        }(\\\\\\\\n            _path,\\\\\\\\n            _indexToken,\\\\\\\\n            _amountIn,\\\\\\\\n            _minOut,\\\\\\\\n            _sizeDelta,\\\\\\\\n            _isLong,\\\\\\\\n            _acceptablePrice,\\\\\\\\n            _executionFee,\\\\\\\\n            _referralCode\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function createDecreasePosition(\\\\\\\\n        address _user,\\\\\\\\n        address[] memory _path,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _collateralDelta,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        address _receiver,\\\\\\\\n        uint256 _acceptablePrice,\\\\\\\\n        uint256 _minOut,\\\\\\\\n        uint256 _executionFee,\\\\\\\\n        bool _withdrawETH\\\\\\\\n    ) external payable onlyOwner {\\\\\\\\n        _createDecreasePosition(\\\\\\\\n            _user,\\\\\\\\n            _path,\\\\\\\\n            _indexToken,\\\\\\\\n            _collateralDelta,\\\\\\\\n            _sizeDelta,\\\\\\\\n            _isLong,\\\\\\\\n            _receiver,\\\\\\\\n            _acceptablePrice,\\\\\\\\n            _minOut,\\\\\\\\n            _executionFee,\\\\\\\\n            _withdrawETH\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function _createDecreasePosition(\\\\\\\\n        address _user,\\\\\\\\n        address[] memory _path,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint256 _collateralDelta,\\\\\\\\n        uint256 _sizeDelta,\\\\\\\\n        bool _isLong,\\\\\\\\n        address _receiver,\\\\\\\\n        uint256 _acceptablePrice,\\\\\\\\n        uint256 _minOut,\\\\\\\\n        uint256 _executionFee,\\\\\\\\n        bool _withdrawETH\\\\\\\\n    ) internal {\\\\\\\\n        PositionHandler(userContractAddress[_user]).decreasePosition{\\\\\\\\n            value: executionFee\\\\\\\\n        }(\\\\\\\\n            _path,\\\\\\\\n            _indexToken,\\\\\\\\n            _collateralDelta,\\\\\\\\n            _sizeDelta,\\\\\\\\n            _isLong,\\\\\\\\n            _receiver,\\\\\\\\n            _acceptablePrice,\\\\\\\\n            _minOut,\\\\\\\\n            _executionFee,\\\\\\\\n            _withdrawETH\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function openNoLoss(\\\\\\\\n        uint256 amount,\\\\\\\\n        uint8 stop,\\\\\\\\n        uint256 take,\\\\\\\\n        uint8 leverage\\\\\\\\n    ) external virtual;\\\\\\\\n\\\\\\\\n    function closeNoLoss(uint256 id) external {\\\\\\\\n        closeSwap(id);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function collateralArray() internal view returns (address[] memory res) {\\\\\\\\n        res = new address[](1);\\\\\\\\n        res[0] = address(collateralToken);\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0x63fc0ae6da3095479a8c649bbb8a82cdbf243651b9264d4cf41955f920f11386\\\\"},\\\\"contracts/NoLoss/NoLossLongPut.sol\\\\":{\\\\"content\\\\":\\\\"pragma solidity ^0.8.3;\\\\\\\\n\\\\\\\\nimport \\\\\\\\\\\\"./NoLoss.sol\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\ncontract NoLossLongPut is NoLoss {\\\\\\\\n    constructor(\\\\\\\\n        address _coverAddress,\\\\\\\\n        IPositionRouter _positionRouter,\\\\\\\\n        IVault _vault,\\\\\\\\n        IRouter _router,\\\\\\\\n        IERC20 _collateralToken,\\\\\\\\n        IERC20 _USDC,\\\\\\\\n        address _indexToken,\\\\\\\\n        uint8 _collateralDecimals\\\\\\\\n    )\\\\\\\\n        NoLoss(\\\\\\\\n            _coverAddress,\\\\\\\\n            _positionRouter,\\\\\\\\n            _vault,\\\\\\\\n            _router,\\\\\\\\n            _collateralToken,\\\\\\\\n            _USDC,\\\\\\\\n            _indexToken,\\\\\\\\n            10,\\\\\\\\n            -10\\\\\\\\n        )\\\\\\\\n    {}\\\\\\\\n\\\\\\\\n    function openNoLoss(\\\\\\\\n        uint256 amount,\\\\\\\\n        uint8 stop,\\\\\\\\n        uint256 take,\\\\\\\\n        uint8 leverage\\\\\\\\n    ) external override {\\\\\\\\n        openSwap(amount, stop, take, leverage, true);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function _calculateCollateral(uint256 amount, uint256 swapPrice)\\\\\\\\n        internal\\\\\\\\n        override\\\\\\\\n        returns (uint256)\\\\\\\\n    {\\\\\\\\n        return amount;\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0x04c0ab6198fbf66e5997a70fcc80f34179daf7d69643967dc1f4248bcf149047\\\\"},\\\\"contracts/NoLoss/PositionHandler.sol\\\\":{\\\\"content\\\\":\\\\"pragma solidity ^0.8.3;\\\\\\\\n\\\\\\\\nimport \\\\\\\\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\\\\\\\";\\\\\\\\nimport \\\\\\\\\\\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\\\\\\\\\\";\\\\\\\\nimport \\\\\\\\\\\\"../Interfaces/gmx/IRouter.sol\\\\\\\\\\\\";\\\\\\\\nimport \\\\\\\\\\\\"../Interfaces/gmx/IPositionRouter.sol\\\\\\\\\\\\";\\\\\\\\n\\\\\\\\ncontract PositionHandler is Ownable {\\\\\\\\n    IPositionRouter public immutable positionRouter;\\\\\\\\n    IRouter public immutable router;\\\\\\\\n    IERC20 public immutable collateralToken;\\\\\\\\n    address public immutable admin;\\\\\\\\n\\\\\\\\n    constructor(\\\\\\\\n        IPositionRouter _positionRouter,\\\\\\\\n        IRouter _router,\\\\\\\\n        IERC20 _collateralToken,\\\\\\\\n        address _admin\\\\\\\\n    ) {\\\\\\\\n        positionRouter = _positionRouter;\\\\\\\\n        router = _router;\\\\\\\\n        collateralToken = _collateralToken;\\\\\\\\n        admin = _admin;\\\\\\\\n        approveAll(\\\\\\\\n            address(_positionRouter),\\\\\\\\n            address(_router),\\\\\\\\n            msg.sender,\\\\\\\\n            type(uint256).max\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function increasePosition(\\\\\\\\n        address[] memory path,\\\\\\\\n        address indexToken,\\\\\\\\n        uint256 amountIn,\\\\\\\\n        uint256 minOut,\\\\\\\\n        uint256 sizeDelta,\\\\\\\\n        bool isLong,\\\\\\\\n        uint256 acceptablePrice,\\\\\\\\n        uint256 executionFee,\\\\\\\\n        bytes32 referralCode\\\\\\\\n    ) external payable {\\\\\\\\n        require(\\\\\\\\n            msg.sender == admin || msg.sender == owner(),\\\\\\\\n            \\\\\\\\\\\\"you are not the owner\\\\\\\\\\\\"\\\\\\\\n        );\\\\\\\\n        positionRouter.createIncreasePosition{value: executionFee}(\\\\\\\\n            path,\\\\\\\\n            indexToken,\\\\\\\\n            amountIn,\\\\\\\\n            minOut,\\\\\\\\n            sizeDelta,\\\\\\\\n            isLong,\\\\\\\\n            acceptablePrice,\\\\\\\\n            executionFee,\\\\\\\\n            referralCode\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function decreasePosition(\\\\\\\\n        address[] memory path,\\\\\\\\n        address indexToken,\\\\\\\\n        uint256 collateralDelta,\\\\\\\\n        uint256 sizeDelta,\\\\\\\\n        bool isLong,\\\\\\\\n        address receiver,\\\\\\\\n        uint256 acceptablePrice,\\\\\\\\n        uint256 minOut,\\\\\\\\n        uint256 executionFee,\\\\\\\\n        bool withdrawETH\\\\\\\\n    ) external payable {\\\\\\\\n        require(\\\\\\\\n            msg.sender == admin || msg.sender == owner(),\\\\\\\\n            \\\\\\\\\\\\"you are not the owner\\\\\\\\\\\\"\\\\\\\\n        );\\\\\\\\n        positionRouter.createDecreasePosition{value: executionFee}(\\\\\\\\n            path,\\\\\\\\n            indexToken,\\\\\\\\n            collateralDelta,\\\\\\\\n            sizeDelta,\\\\\\\\n            isLong,\\\\\\\\n            receiver,\\\\\\\\n            acceptablePrice,\\\\\\\\n            minOut,\\\\\\\\n            executionFee,\\\\\\\\n            withdrawETH\\\\\\\\n        );\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function approveAll(\\\\\\\\n        address positionRouterAddress,\\\\\\\\n        address routerAddress,\\\\\\\\n        address noLossAddress,\\\\\\\\n        uint256 amount\\\\\\\\n    ) public onlyOwner {\\\\\\\\n        router.approvePlugin(positionRouterAddress);\\\\\\\\n        collateralToken.approve(routerAddress, amount);\\\\\\\\n        collateralToken.approve(noLossAddress, amount);\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function withdrawErc20(IERC20 token) external onlyOwner {\\\\\\\\n        token.transfer(msg.sender, token.balanceOf(address(this)));\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    function deposit() public payable {}\\\\\\\\n\\\\\\\\n    function withdrawETH() external onlyOwner {\\\\\\\\n        payable(msg.sender).transfer(address(this).balance);\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\",\\\\"keccak256\\\\":\\\\"0xcbcf332d875c3fca69f1758684ebdc054788b729bc030755d08c69fd3f948e9f\\\\"}},\\\\"version\\\\":1}","bytecode":"0x6101406040526000600255670de0b6b3a7640000600355662386f26fc100006004556006805465ffffffffffff1916640a080205021790553480156200004457600080fd5b506040516200550b3803806200550b8339810160408190526200006791620001b6565b87878787878787600a6009196200007e336200014d565b600180546001600160a01b0319166001600160a01b038b811691909117909155888116608081905288821660a05287821660c05286821660e052858216610100529084166101205260078390556008829055604080516363ae210360e01b815290516363ae2103916004808201926020929091908290030181865afa1580156200010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013291906200027c565b60055550620002969f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620001b357600080fd5b50565b600080600080600080600080610100898b031215620001d457600080fd5b8851620001e1816200019d565b60208a0151909850620001f4816200019d565b60408a015190975062000207816200019d565b60608a01519096506200021a816200019d565b60808a01519095506200022d816200019d565b60a08a015190945062000240816200019d565b60c08a015190935062000253816200019d565b60e08a015190925060ff811681146200026b57600080fd5b809150509295985092959890939650565b6000602082840312156200028f57600080fd5b5051919050565b60805160a05160c05160e0516101005161012051615168620003a360003960008181610c1601528181610ddb0152818161195e01528181611a120152818161253b01528181612a7f01528181612c9501526133fe0152600081816108160152612698015260008181610a5301528181610db90152818161186d01528181611d9d01528181611fc9015281816120840152818161251901528181612b9b015281816130ed015281816133dc01526135b1015260008181610ce90152818161184c0152611ae9015260008181610d1f01528181610d870152818161198601528181611a3a015281816124e501526133a801526000818161064c0152818161182b0152611ac101526151686000f3fe608060405260043610620003d75760003560e01c80638fedabcc1162000203578063c290d6911162000117578063e07ee06d11620000ad578063eb02c3011162000078578063eb02c3011462000c5d578063f2fde38b1462000cb0578063f887ea401462000cd5578063fbfa77cf1462000d0b57600080fd5b8063e07ee06d1462000bc5578063e086e5ec1462000bea578063e7d015f21462000c02578063e8679ba71462000c3857600080fd5b8063c7e42b1b11620000ee578063c7e42b1b1462000b5a578063d0e30db014620004c9578063d2d89def1462000b7f578063d978f1451462000ba457600080fd5b8063c290d6911462000aea578063c34c08e51462000b0f578063c743c4c61462000b3857600080fd5b8063ab0d6eb01162000199578063b2016bd41162000164578063b2016bd41462000a3f578063b2567a981462000a75578063bd6423d51462000aaf578063be0bceb61462000ad257600080fd5b8063ab0d6eb014620009bd578063ae3302c214620009d4578063b11bb6eb14620009f7578063b1de531d1462000a1a57600080fd5b80639ab0755811620001da5780639ab0755814620009365780639b2cb5d8146200095b5780639c1720171462000973578063a722d4ca146200099857600080fd5b80638fedabcc146200085857806397c1e4b6146200087d57806399fbab88146200089957600080fd5b80635f48f39311620002fb57806371640de311620002915780637748a64f116200025c5780637748a64f14620007ac578063897b063714620007dd57806389a3027114620008025780638da5cb5b146200083857600080fd5b806371640de3146200073357806372569c8e146200074b57806372cf40b9146200077057806376f37001146200078757600080fd5b80636617fbd211620002d25780636617fbd214620006ac5780636bcf674614620006d15780636ed8e18e14620006f6578063715018a6146200071b57600080fd5b80635f48f393146200062057806361ef161f14620006385780636254ac8e146200068757600080fd5b806332f8b03911620003715780634165e44e11620003485780634165e44e146200059957806341f6cf4e14620005be5780634fe47f7014620005d65780635d216eb514620005fb57600080fd5b806332f8b039146200053757806337a063d2146200055c57806340e9903b146200058157600080fd5b8063141d661911620003b2578063141d661914620004a45780631c3c0ea814620004cb57806320f6f76f14620004f057806322578475146200051257600080fd5b806304a5ea7d14620003dc578063075a6f5a146200042057806308f789e4146200045d575b600080fd5b348015620003e957600080fd5b506200040d620003fb3660046200367e565b600a6020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156200042d57600080fd5b50620004456200043f3660046200367e565b62000d41565b60408051921515835260208301919091520162000417565b3480156200046a57600080fd5b50620004916200047c366004620036c0565b600c6020526000908152604090205460ff1681565b60405160ff909116815260200162000417565b348015620004b157600080fd5b50620004c9620004c3366004620036e7565b62000e5b565b005b348015620004d857600080fd5b50620004c9620004ea366004620036c0565b62000f05565b348015620004fd57600080fd5b50600654620004919062010000900460ff1681565b3480156200051f57600080fd5b50620004c96200053136600462003737565b62000f61565b3480156200054457600080fd5b506200040d620005563660046200367e565b62000fe5565b3480156200056957600080fd5b50620004c96200057b3660046200367e565b620010dd565b3480156200058e57600080fd5b506200040d60055481565b348015620005a657600080fd5b50620004c9620005b836600462003755565b6200110f565b348015620005cb57600080fd5b506200040d60085481565b348015620005e357600080fd5b50620004c9620005f53660046200367e565b620011ac565b3480156200060857600080fd5b50620004c96200061a3660046200378d565b6200120f565b3480156200062d57600080fd5b506200040d60035481565b3480156200064557600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200162000417565b3480156200069457600080fd5b50620004c9620006a63660046200367e565b6200124c565b348015620006b957600080fd5b50620004c9620006cb366004620037c8565b6200125a565b348015620006de57600080fd5b506200040d620006f03660046200367e565b62001296565b3480156200070357600080fd5b50620004c962000715366004620037f7565b62001375565b3480156200072857600080fd5b50620004c96200138b565b3480156200074057600080fd5b506200040d60025481565b3480156200075857600080fd5b50620004c96200076a36600462003755565b620013c6565b620004c96200078136600462003922565b6200144a565b3480156200079457600080fd5b50620004c9620007a63660046200367e565b62001499565b348015620007b957600080fd5b506200040d620007cb366004620036c0565b600d6020526000908152604090205481565b348015620007ea57600080fd5b50620004c9620007fc3660046200367e565b6200159e565b3480156200080f57600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156200084557600080fd5b506000546001600160a01b03166200066e565b3480156200086557600080fd5b506200040d620008773660046200367e565b62001601565b3480156200088a57600080fd5b50600654620004919060ff1681565b348015620008a657600080fd5b506200091e620008b83660046200367e565b600960205260009081526040902080546001820154600283015460038401546004850154600586015460069096015460ff808716976101009097046001600160a01b03169663ffffffff841693600160201b8104831693600160281b909104831692168a565b604051620004179a9998979695949392919062003a0e565b3480156200094357600080fd5b50620004c962000955366004620036c0565b620017fa565b3480156200096857600080fd5b506200040d60045481565b3480156200098057600080fd5b506200040d6200099236600462003a9d565b6200193e565b348015620009a557600080fd5b50620004c9620009b7366004620036c0565b62001a6a565b620004c9620009ce36600462003abd565b62001b60565b348015620009e157600080fd5b5060065462000491906301000000900460ff1681565b34801562000a0457600080fd5b506006546200049190600160201b900460ff1681565b34801562000a2757600080fd5b50620004c962000a3936600462003b7a565b62001bad565b34801562000a4c57600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b34801562000a8257600080fd5b506200066e62000a94366004620036c0565b600b602052600090815260409020546001600160a01b031681565b34801562000abc57600080fd5b506006546200049190600160281b900460ff1681565b34801562000adf57600080fd5b506200040d60075481565b34801562000af757600080fd5b50620004c962000b093660046200367e565b62001c38565b34801562000b1c57600080fd5b506006546200066e90600160301b90046001600160a01b031681565b34801562000b4557600080fd5b506001546200066e906001600160a01b031681565b34801562000b6757600080fd5b50620004c962000b79366004620036c0565b6200216c565b34801562000b8c57600080fd5b50620004c962000b9e36600462003b9b565b62002280565b34801562000bb157600080fd5b506006546200049190610100900460ff1681565b34801562000bd257600080fd5b50620004c962000be4366004620036c0565b62002371565b34801562000bf757600080fd5b50620004c9620023c0565b34801562000c0f57600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b34801562000c4557600080fd5b50620004c962000c5736600462003737565b6200241a565b34801562000c6a57600080fd5b5062000c8262000c7c3660046200367e565b62002497565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00162000417565b34801562000cbd57600080fd5b50620004c962000ccf366004620036c0565b620025df565b34801562000ce257600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b34801562000d1857600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b600081815260096020908152604080832080546001600160a01b0361010090910481168552600b90935281842054600480830154935163045a6f3760e41b8152869593947f00000000000000000000000000000000000000000000000000000000000000008516946345a6f3709462000e0e949116927f0000000000000000000000000000000000000000000000000000000000000000927f000000000000000000000000000000000000000000000000000000000000000092600160201b90910460ff16910162003bbe565b6040805180830381865afa15801562000e2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e51919062003be8565b9250925050915091565b6000546001600160a01b0316331462000e915760405162461bcd60e51b815260040162000e889062003c19565b60405180910390fd5b6001600160a01b038281166000908152600b60205260409081902054905163c7e42b1b60e01b8152838316600482015291169063c7e42b1b90602401600060405180830381600087803b15801562000ee857600080fd5b505af115801562000efd573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331462000f325760405162461bcd60e51b815260040162000e889062003c19565b600680546001600160a01b03909216600160301b026601000000000000600160d01b0319909216919091179055565b6000546001600160a01b0316331462000f8e5760405162461bcd60e51b815260040162000e889062003c19565b6006805465ff00000000001916600160281b60ff8416908102919091179091556040519081527f5f50f6e7ffe7e065c69751d5811e3fcc3c6396476e9adca6c1ed61451a049316906020015b60405180910390a150565b60008062000ff38362002497565b505050600086815260096020526040812091945090925083900390506200109357620f424062001038670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001044919062003c86565b60018201546006830154600284015460ff90911690620010679060649062003c86565b62001073919062003c64565b6200107f919062003c64565b6200108b919062003c86565b949350505050565b620f4240620010b7670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b620010c3919062003c86565b6001820154600683015460ff166200106760648662003c86565b6000546001600160a01b031633146200110a5760405162461bcd60e51b815260040162000e889062003c19565b600555565b6000546001600160a01b031633146200113c5760405162461bcd60e51b815260040162000e889062003c19565b6006805463ffff000019166201000060ff85811691820263ff0000001916929092176301000000928516928302179092556040805192835260208301919091527faacff572373fdda7109b3504c37b2b643367b69864313bb036c21569da79b4af91015b60405180910390a15050565b6000546001600160a01b03163314620011d95760405162461bcd60e51b815260040162000e889062003c19565b60038190556040518181527fe49b18fe24eb0f323a42b5d7c70de83440fe7b490823bd47bf1a891f92d7a03c9060200162000fda565b6000546001600160a01b031633146200123c5760405162461bcd60e51b815260040162000e889062003c19565b6200124882826200267e565b5050565b62001257816200271d565b50565b6000546001600160a01b03163314620012875760405162461bcd60e51b815260040162000e889062003c19565b600091820b600755900b600855565b600080620012a48362002497565b5050506000868152600960205260408120919450909250839003905062001326576004810154600160201b900460ff161562001311576006810154620012ef9060ff16606462003ca9565b60ff166064826002015462001305919062003c86565b6200108b919062003c64565b6006810154620012ef9060ff16606462003ccf565b6004810154600160201b900460ff161562001360576006810154620013509060ff16606462003ca9565b60ff166200130560648462003c86565b6006810154620013509060ff16606462003ccf565b6200138584848484600162002b52565b50505050565b6000546001600160a01b03163314620013b85760405162461bcd60e51b815260040162000e889062003c19565b620013c4600062002f4e565b565b6000546001600160a01b03163314620013f35760405162461bcd60e51b815260040162000e889062003c19565b6006805460ff84811661ffff199092168217610100918516918202179092556040805191825260208201929092527f70eb7ebb846f76a17160a0e9ced7b933db2adad281c51925bf836c54dc2014939101620011a0565b6000546001600160a01b03163314620014775760405162461bcd60e51b815260040162000e889062003c19565b6200148c8b8b8b8b8b8b8b8b8b8b8b62002f9e565b5050505050505050505050565b60008181526009602052604081206004810154909190620014c490600160201b900460ff166200193e565b6004830154909150600160201b900460ff161562001538576000838152600a6020526040902054811015620015325760405162461bcd60e51b8152602060048201526013602482015272383934b1b2903132b637bb903a3934b3b3b2b960691b604482015260640162000e88565b6200158e565b6000838152600a60205260409020548111156200158e5760405162461bcd60e51b8152602060048201526013602482015272383934b1b29030b137bb32903a3934b3b3b2b960691b604482015260640162000e88565b62001599836200271d565b505050565b6000546001600160a01b03163314620015cb5760405162461bcd60e51b815260040162000e889062003c19565b60038190556040518181527f31e8afaf594e92b0e3a71872c4b570994eaf53a4fb17977eb469c2b786cd70239060200162000fda565b6000806200160f8362002497565b50505060008681526009602052604081206004810154929550935091506200164190600160201b900460ff166200193e565b9050826000036200173d576004820154600160201b900460ff1615620016e057816002015481106200167857506000949350505050565b620f42406200169c670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b620016a8919062003c86565b8260010154828460020154620016bf919062003cf7565b620016cb919062003c64565b620016d7919062003c86565b95945050505050565b81600201548111620016f757506000949350505050565b620f42406200171b670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001727919062003c86565b60018301546002840154620016bf908462003cf7565b6004820154600160201b900460ff1615620017a6578281106200176557506000949350505050565b620f424062001789670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001795919062003c86565b6001830154620016bf838662003cf7565b828111620017b957506000949350505050565b620f4240620017dd670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b620017e9919062003c86565b6001830154620016bf858462003cf7565b6000546001600160a01b03163314620018275760405162461bcd60e51b815260040162000e889062003c19565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006200189f6000546001600160a01b031690565b604051620018ad9062003670565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f080158015620018f2573d6000803e3d6000fd5b506001600160a01b039283166000908152600b6020908152604080832080546001600160a01b0319169490961693909317909455600c9093529091208054600260ff1990911617905550565b60008115620019fb57604051637092736960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e124e6d2906024015b602060405180830381865afa158015620019cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019f5919062003d11565b92915050565b6040516340d3096b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000016906381a612d690602401620019b1565b6000546001600160a01b0316331462001a975760405162461bcd60e51b815260040162000e889062003c19565b6001600160a01b038181166000908152600b60205260409081902054905163742dcc2b60e01b81527f0000000000000000000000000000000000000000000000000000000000000000831660048201527f000000000000000000000000000000000000000000000000000000000000000083166024820152306044820152600019606482015291169063742dcc2b90608401600060405180830381600087803b15801562001b4457600080fd5b505af115801562001b59573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331462001b8d5760405162461bcd60e51b815260040162000e889062003c19565b62001ba18a8a8a8a8a8a8a8a8a8a62003036565b50505050505050505050565b6000546001600160a01b0316331462001bda5760405162461bcd60e51b815260040162000e889062003c19565b6001600160a01b0382166000818152600c6020908152604091829020805460ff191660ff86169081179091558251938452908301527fe793b34a2f1b8660bdad3ebe9bf239c8cae6e03eb4e2e60007581b1995f69ee09101620011a0565b60008181526009602052604090206001815460ff16600281111562001c615762001c61620039f8565b1462001ca55760405162461bcd60e51b81526020600482015260126024820152711c1bdcda5d1a5bdb881a5cc818db1bdcd95960721b604482015260640162000e88565b6000546001600160a01b0316331480159062001cd35750600654600160301b90046001600160a01b03163314155b1562001d0a57805461010090046001600160a01b0316331462001d0a5760405162461bcd60e51b815260040162000e889062003d2b565b600062001d178362002497565b505050505090508060001462001d635760405162461bcd60e51b815260206004820152601060248201526f3837b9b4ba34b7b71034b99037b832b760811b604482015260640162000e88565b81546001600160a01b0361010090910481166000908152600b60205260408082205490516370a0823160e01b8152908316600482015290917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801562001de5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e0b919062003d11565b90508060000362001e515760405162461bcd60e51b815260206004820152600f60248201526e18985b185b98d9481a5cc81b9d5b1b608a1b604482015260640162000e88565b60018301546004840154600160201b900460ff1662001ebf57620f424062001e8e670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001e9a919062003c86565b8460020154856001015462001eb0919062003c64565b62001ebc919062003c86565b90505b60058401548211600080821562001f235760048701546005880154600160281b90910460ff169060649062001ef5908862003cf7565b62001f01919062003c86565b62001f0d919062003c64565b905062001f1b818662003cf7565b915062001f98565b84915062001f4b62001f358962000fe5565b885461010090046001600160a01b03166200267e565b865461010090046001600160a01b03166000908152600c6020526040812080546001929062001f7f90849060ff1662003ca9565b92506101000a81548160ff021916908360ff1602179055505b865461010090046001600160a01b039081166000818152600b6020526040908190205490516323b872dd60e01b81527f00000000000000000000000000000000000000000000000000000000000000008416936323b872dd93620020059390911691879060040162003d70565b6020604051808303816000875af115801562002025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200204b919062003d94565b5080156200210957865461010090046001600160a01b039081166000908152600b6020526040908190205490516323b872dd60e01b81527f00000000000000000000000000000000000000000000000000000000000000008316926323b872dd92620020c1929116903090869060040162003d70565b6020604051808303816000875af1158015620020e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002107919062003d94565b505b865460ff191660021787556003870154604080518a81526020810184905290810184905260608101919091527f02bd97927012c328f69c787c8a0e6e9acfb28301961db4e64ec32758eddb00079060800160405180910390a15050505050505050565b6000546001600160a01b03163314620021995760405162461bcd60e51b815260040162000e889062003c19565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015620021e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200220e919062003d11565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156200225a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001248919062003d94565b600082815260096020526040812090546001600160a01b03163314801590620022bb5750600654600160301b90046001600160a01b03163314155b156200232157805461010090046001600160a01b03163314620023215760405162461bcd60e51b815260206004820152601c60248201527f796f7520617265206e6f7420746865206f7074696f6e206f776e657200000000604482015260640162000e88565b6000838152600a602090815260409182902084905581518581529081018490527faf4603f246fed5ebfd8c6da49ea0934c39b43337752b252777090b8e1c5399ef910160405180910390a1505050565b6000546001600160a01b031633146200239e5760405162461bcd60e51b815260040162000e889062003c19565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620023ed5760405162461bcd60e51b815260040162000e889062003c19565b60405133904780156108fc02916000818181858888f1935050505015801562001257573d6000803e3d6000fd5b6000546001600160a01b03163314620024475760405162461bcd60e51b815260040162000e889062003c19565b6006805464ff000000001916600160201b60ff8416908102919091179091556040519081527f70447e35d3f6014cf755ce47eecb27abb2331710fb0fcaea1d9c15d411c319559060200162000fda565b600081815260096020908152604080832080546001600160a01b0361010090910481168552600b909352818420546004808301549351634a3f088d60e01b81528695869586958695869591947f0000000000000000000000000000000000000000000000000000000000000000851694634a3f088d946200256d9493909116927f0000000000000000000000000000000000000000000000000000000000000000927f000000000000000000000000000000000000000000000000000000000000000092600160201b900460ff16910162003bbe565b61010060405180830381865afa1580156200258c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025b2919062003db4565b50959c50939a50919850965094509250506000859003620025d557806002015494505b5091939550919395565b6000546001600160a01b031633146200260c5760405162461bcd60e51b815260040162000e889062003c19565b6001600160a01b038116620026735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000e88565b620012578162002f4e565b6001546040516323b872dd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116926323b872dd92620026d79291909116908590879060040162003d70565b6020604051808303816000875af1158015620026f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001599919062003d94565b600081815260096020526040812090815460ff166002811115620027455762002745620039f8565b14620027895760405162461bcd60e51b81526020600482015260126024820152711c1bdcda5d1a5bdb881a5cc818db1bdcd95960721b604482015260640162000e88565b6000546001600160a01b03163314801590620027b75750600654600160301b90046001600160a01b03163314155b15620027ee57805461010090046001600160a01b03163314620027ee5760405162461bcd60e51b815260040162000e889062003d2b565b60048101546000906200280b90600160201b900460ff166200193e565b905060008060006200281d8662002497565b50505092509250925082600003620028705760405162461bcd60e51b81526020600482015260156024820152741c1bdcda5d1a5bdb881cda5e99481a5cc81b9d5b1b605a1b604482015260640162000e88565b6004850154600160201b900460ff1615620028f857808410620028f2576200289a60648262003c86565b620028a790606562003c64565b841015620028f25760405162461bcd60e51b8152602060048201526017602482015276746f6f206c6974746c65207072696365206368616e676560481b604482015260640162000e88565b62002965565b80841162002965576200290d60648262003c86565b6200291a90606362003c64565b841115620029655760405162461bcd60e51b8152602060048201526017602482015276746f6f206c6974746c65207072696365206368616e676560481b604482015260640162000e88565b600080620029738862000d41565b909250905081151560000362002a1a576004870154600160201b900460ff16620029aa57620029a28862001296565b8610620029b8565b620029b58862001296565b86115b1562002a1a576004870154620029d8906107089063ffffffff1662003e21565b63ffffffff16421162002a1a5760405162461bcd60e51b8152602060048201526009602482015268746f6f206561726c7960b81b604482015260640162000e88565b60008262002a29578162002a2b565b845b905060006008546103e862002a41919062003e49565b62002a4f6103e88a62003c86565b62002a5b919062003c64565b895490915061010090046001600160a01b031662002af98162002a7d620030c9565b7f0000000000000000000000000000000000000000000000000000000000000000868c8f60040160049054906101000a900460ff16600b6000896001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a90046001600160a01b0316896000600554600062002f9e565b60028a0186905560038a01899055895460ff19166001178a556040518b81527ff3a2f044163a96d44e2bf00ab8150db46030e3bff09e9dee1e59ce229ebbdefa9060200160405180910390a15050505050505050505050565b600062002b5f826200193e565b905062002b7186868686868662003145565b336000818152600b6020526040908190205490516323b872dd60e01b815288926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116936323b872dd9362002bd8939290911690869060040162003d70565b6020604051808303816000875af115801562002bf8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c1e919062003d94565b50600060ff8516670de0b6b3a764000062002c3a858b62003c64565b62002c46919062003c86565b62002c52919062003c64565b905060006007546103e862002c68919062003e49565b62002c766103e88662003c86565b62002c82919062003c64565b905062002cc73362002c93620030c9565b7f0000000000000000000000000000000000000000000000000000000000000000866000878b886005546000801b62003036565b600060028760ff161162002cdd57600062002ceb565b600654600160281b900460ff165b60065462002d0490600160201b900460ff168b62003e90565b62002d10919062003ccf565b604080516101408101825260008152336020820152919250810162002d3960ff8a168d62003c64565b8152600060208201819052604082015260600162002d5b4262278d0062003ebc565b63ffffffff16815260200187151581526020018260ff1681526020018581526020018a60ff1681525060096000600254815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111562002dc65762002dc6620039f8565b02179055506020828101518254610100600160a81b0319166101006001600160a01b039283168102919091178455604080860151600186015560608601516002808701919091556080870151600387015560a087015160048701805460c08a015160e08b015163ffffffff90941664ffffffffff1990921691909117600160201b911515919091021765ff00000000001916600160281b60ff93841602179055928701516005870155610120909601516006909501805460ff1916959092169490941790559254336000908152600b8352838120549094168452600d909152912081905562002eb6908962002280565b6002547f859e2a4a7208665502e139397707532bdf364493f7a60082be9c1a83704a975a903362002eeb60ff8b168e62003c64565b604080519384526001600160a01b03909216602084015290820152606081018690526080810187905260ff831660a082015260c00160405180910390a160016002600082825462002f3d919062003ebc565b909155505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808c166000908152600b60205260409081902054600554915163c1303d6f60e01b815292169163c1303d6f919062002ff5908e908e908e908e908e908e908e908e908e908e9060040162003f1d565b6000604051808303818588803b1580156200300f57600080fd5b505af115801562003024573d6000803e3d6000fd5b50505050505050505050505050505050565b6001600160a01b03808b166000908152600b60205260409081902054905163f4bf4d4960e01b815291169063f4bf4d4990849062003089908d908d908d908d908d908d908d9089908d9060040162003f8e565b6000604051808303818588803b158015620030a357600080fd5b505af1158015620030b8573d6000803e3d6000fd5b505050505050505050505050505050565b604080516001808252818301909252606091602080830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000008160008151811062003122576200312262003fed565b60200260200101906001600160a01b031690816001600160a01b03168152505090565b336000908152600c602052604081205460ff16908190036200319d5760405162461bcd60e51b815260206004820152601060248201526f1b1a5b5a5d081a5cc81c995858da195960821b604482015260640162000e88565b60065460ff9081169087161015620031ec5760405162461bcd60e51b81526020600482015260116024820152701cdd1bdc081a5cc81d1bdbc81cdb585b1b607a1b604482015260640162000e88565b60065460ff610100909104811690871611156200323e5760405162461bcd60e51b815260206004820152600f60248201526e73746f7020697320746f6f2062696760881b604482015260640162000e88565b60065460ff6201000090910481169085161015620032975760405162461bcd60e51b81526020600482015260156024820152741b195d995c9859d9481a5cc81d1bdbc81cdb585b1b605a1b604482015260640162000e88565b60065460ff630100000090910481169085161115620032ef5760405162461bcd60e51b81526020600482015260136024820152726c6576657261676520697320746f6f2062696760681b604482015260640162000e88565b600354871115620033375760405162461bcd60e51b8152602060048201526011602482015270616d6f756e7420697320746f6f2062696760781b604482015260640162000e88565b600454871015620033815760405162461bcd60e51b8152602060048201526013602482015272185b5bdd5b9d081a5cc81d1bdbc81cdb585b1b606a1b604482015260640162000e88565b336000908152600b6020526040808220549051634a3f088d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692634a3f088d92620034299291909116907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908a9060040162003bbe565b61010060405180830381865afa15801562003448573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200346e919062003db4565b50505050505050905080600014620034d35760405162461bcd60e51b815260206004820152602160248201527f796f7520616c7265616479206861766520616e206f70656e20706f736974696f6044820152603760f91b606482015260840162000e88565b831562003531578286116200352b5760405162461bcd60e51b815260206004820181905260248201527f74616b65206c657373207468616e20746865206f70656e696e67207072696365604482015260640162000e88565b62003582565b828610620035825760405162461bcd60e51b815260206004820181905260248201527f74616b65206d6f7265207468616e20746865206f70656e696e67207072696365604482015260640162000e88565b336000908152600b60205260408082205490516370a0823160e01b81526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015620035fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003621919062003d11565b90508015620036655760405162461bcd60e51b815260206004820152600f60248201526e18985b185b98d9481a5cc81b9d5b1b608a1b604482015260640162000e88565b505050505050505050565b61112f806200400483390190565b6000602082840312156200369157600080fd5b5035919050565b6001600160a01b03811681146200125757600080fd5b8035620036bb8162003698565b919050565b600060208284031215620036d357600080fd5b8135620036e08162003698565b9392505050565b60008060408385031215620036fb57600080fd5b8235620037088162003698565b915060208301356200371a8162003698565b809150509250929050565b803560ff81168114620036bb57600080fd5b6000602082840312156200374a57600080fd5b620036e08262003725565b600080604083850312156200376957600080fd5b620037748362003725565b9150620037846020840162003725565b90509250929050565b60008060408385031215620037a157600080fd5b8235915060208301356200371a8162003698565b8035600081900b8114620036bb57600080fd5b60008060408385031215620037dc57600080fd5b620037e783620037b5565b91506200378460208401620037b5565b600080600080608085870312156200380e57600080fd5b84359350620038206020860162003725565b925060408501359150620038376060860162003725565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200386a57600080fd5b8135602067ffffffffffffffff808311156200388a576200388a62003842565b8260051b604051601f19603f83011681018181108482111715620038b257620038b262003842565b604052938452858101830193838101925087851115620038d157600080fd5b83870191505b84821015620038fb57620038eb82620036ae565b83529183019190830190620038d7565b979650505050505050565b80151581146200125757600080fd5b8035620036bb8162003906565b60008060008060008060008060008060006101608c8e0312156200394557600080fd5b8b35620039528162003698565b9a5060208c013567ffffffffffffffff8111156200396f57600080fd5b6200397d8e828f0162003858565b9a505060408c0135620039908162003698565b985060608c0135975060808c01359650620039ae60a08d0162003915565b9550620039be60c08d01620036ae565b945060e08c013593506101008c013592506101208c01359150620039e66101408d0162003915565b90509295989b509295989b9093969950565b634e487b7160e01b600052602160045260246000fd5b610140810160038c1062003a3257634e487b7160e01b600052602160045260246000fd5b8b82526001600160a01b038b166020830152604082018a9052606082018990526080820188905263ffffffff871660a083015285151560c083015260ff851660e08301528361010083015262003a8e61012083018460ff169052565b9b9a5050505050505050505050565b60006020828403121562003ab057600080fd5b8135620036e08162003906565b6000806000806000806000806000806101408b8d03121562003ade57600080fd5b8a3562003aeb8162003698565b995060208b013567ffffffffffffffff81111562003b0857600080fd5b62003b168d828e0162003858565b99505060408b013562003b298162003698565b975060608b0135965060808b0135955060a08b0135945060c08b013562003b508162003906565b8094505060e08b013592506101008b013591506101208b013590509295989b9194979a5092959850565b6000806040838503121562003b8e57600080fd5b8235620037748162003698565b6000806040838503121562003baf57600080fd5b50508035926020909101359150565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b6000806040838503121562003bfc57600080fd5b825162003c098162003906565b6020939093015192949293505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562003c815762003c8162003c4e565b500290565b60008262003ca457634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff84168082101562003cc65762003cc662003c4e565b90039392505050565b600060ff821660ff84168060ff0382111562003cef5762003cef62003c4e565b019392505050565b60008282101562003d0c5762003d0c62003c4e565b500390565b60006020828403121562003d2457600080fd5b5051919050565b60208082526025908201527f796f7520617265206e6f7420746865206f776e6572206f662074686520706f7360408201526434ba34b7b760d91b606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121562003da757600080fd5b8151620036e08162003906565b600080600080600080600080610100898b03121562003dd257600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015162003e098162003906565b8092505060e089015190509295985092959890939650565b600063ffffffff8381169083168181101562003e415762003e4162003c4e565b039392505050565b600080821280156001600160ff1b038490038513161562003e6e5762003e6e62003c4e565b600160ff1b839003841281161562003e8a5762003e8a62003c4e565b50500190565b600060ff821660ff84168160ff048111821515161562003eb45762003eb462003c4e565b029392505050565b6000821982111562003ed25762003ed262003c4e565b500190565b600081518084526020808501945080840160005b8381101562003f125781516001600160a01b03168752958201959082019060010162003eeb565b509495945050505050565b600061014080835262003f338184018e62003ed7565b6001600160a01b039c8d166020850152604084019b909b525050606081019790975294151560808701529290961660a085015260c084015260e083019490945261010082019390935291151561012090920191909152919050565b600061012080835262003fa48184018d62003ed7565b6001600160a01b039b909b166020840152505060408101979097526060870195909552608086019390935290151560a085015260c084015260e083015261010090910152919050565b634e487b7160e01b600052603260045260246000fdfe6101006040523480156200001257600080fd5b506040516200112f3803806200112f83398101604081905262000035916200029e565b620000403362000079565b6001600160a01b0380851660805283811660a05282811660c052811660e0526200006f848433600019620000c9565b5050505062000331565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b60a0516040516338c74dd960e01b81526001600160a01b038681166004830152909116906338c74dd990602401600060405180830381600087803b1580156200017057600080fd5b505af115801562000185573d6000803e3d6000fd5b505060c05160405163095ea7b360e01b81526001600160a01b03878116600483015260248201869052909116925063095ea7b391506044016020604051808303816000875af1158015620001dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000203919062000306565b5060c05160405163095ea7b360e01b81526001600160a01b038481166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af115801562000258573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200027e919062000306565b5050505050565b6001600160a01b03811681146200029b57600080fd5b50565b60008060008060808587031215620002b557600080fd5b8451620002c28162000285565b6020860151909450620002d58162000285565b6040860151909350620002e88162000285565b6060860151909250620002fb8162000285565b939692955090935050565b6000602082840312156200031957600080fd5b815180151581146200032a57600080fd5b9392505050565b60805160a05160c05160e051610d946200039b6000396000818161022d015281816104a001526107c301526000818161017e0152818161038b0152610421015260008181610261015261030b01526000818160d90152818161053101526108540152610d946000f3fe6080604052600436106100c25760003560e01c8063c7e42b1b1161007f578063f2fde38b11610059578063f2fde38b146101e8578063f4bf4d4914610208578063f851a4401461021b578063f887ea401461024f57600080fd5b8063c7e42b1b146101b3578063d0e30db01461012c578063e086e5ec146101d357600080fd5b806361ef161f146100c7578063715018a614610117578063742dcc2b1461012e5780638da5cb5b1461014e578063b2016bd41461016c578063c1303d6f146101a0575b600080fd5b3480156100d357600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b34801561012357600080fd5b5061012c610283565b005b34801561013a57600080fd5b5061012c61014936600461094d565b6102c2565b34801561015a57600080fd5b506000546001600160a01b03166100fb565b34801561017857600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b61012c6101ae366004610a64565b610495565b3480156101bf57600080fd5b5061012c6101ce366004610b20565b6105b8565b3480156101df57600080fd5b5061012c6106c7565b3480156101f457600080fd5b5061012c610203366004610b20565b610720565b61012c610216366004610b44565b6107b8565b34801561022757600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561025b57600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146102b65760405162461bcd60e51b81526004016102ad90610be3565b60405180910390fd5b6102c060006108d8565b565b6000546001600160a01b031633146102ec5760405162461bcd60e51b81526004016102ad90610be3565b6040516338c74dd960e01b81526001600160a01b0385811660048301527f000000000000000000000000000000000000000000000000000000000000000016906338c74dd990602401600060405180830381600087803b15801561034f57600080fd5b505af1158015610363573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038681166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016925063095ea7b391506044016020604051808303816000875af11580156103d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fa9190610c18565b5060405163095ea7b360e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610c18565b5050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806104d657506000546001600160a01b031633145b61051a5760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b60448201526064016102ad565b6040516339c374bf60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e70dd2fc90849061057a908e908e908e908e908e908e908e908e908a908e90600401610c79565b6000604051808303818588803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b505050505050505050505050505050565b6000546001600160a01b031633146105e25760405162461bcd60e51b81526004016102ad90610be3565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190610ce8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190610c18565b5050565b6000546001600160a01b031633146106f15760405162461bcd60e51b81526004016102ad90610be3565b60405133904780156108fc02916000818181858888f1935050505015801561071d573d6000803e3d6000fd5b50565b6000546001600160a01b0316331461074a5760405162461bcd60e51b81526004016102ad90610be3565b6001600160a01b0381166107af5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ad565b61071d816108d8565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806107f957506000546001600160a01b031633145b61083d5760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b60448201526064016102ad565b604051630c98741760e41b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c987417090849061089b908d908d908d908d908d908d908d9089908d90600401610d01565b6000604051808303818588803b1580156108b457600080fd5b505af11580156108c8573d6000803e3d6000fd5b5050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461071d57600080fd5b803561094881610928565b919050565b6000806000806080858703121561096357600080fd5b843561096e81610928565b9350602085013561097e81610928565b9250604085013561098e81610928565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109c557600080fd5b8135602067ffffffffffffffff808311156109e2576109e261099e565b8260051b604051601f19603f83011681018181108482111715610a0757610a0761099e565b604052938452858101830193838101925087851115610a2557600080fd5b83870191505b84821015610a4b57610a3c8261093d565b83529183019190830190610a2b565b979650505050505050565b801515811461071d57600080fd5b6000806000806000806000806000806101408b8d031215610a8457600080fd5b8a3567ffffffffffffffff811115610a9b57600080fd5b610aa78d828e016109b4565b9a505060208b0135610ab881610928565b985060408b0135975060608b0135965060808b0135610ad681610a56565b955060a08b0135610ae681610928565b945060c08b0135935060e08b013592506101008b013591506101208b0135610b0d81610a56565b809150509295989b9194979a5092959850565b600060208284031215610b3257600080fd5b8135610b3d81610928565b9392505050565b60008060008060008060008060006101208a8c031215610b6357600080fd5b893567ffffffffffffffff811115610b7a57600080fd5b610b868c828d016109b4565b99505060208a0135610b9781610928565b975060408a0135965060608a0135955060808a0135945060a08a0135610bbc81610a56565b8094505060c08a0135925060e08a013591506101008a013590509295985092959850929598565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610c2a57600080fd5b8151610b3d81610a56565b600081518084526020808501945080840160005b83811015610c6e5781516001600160a01b031687529582019590820190600101610c49565b509495945050505050565b6000610140808352610c8d8184018e610c35565b6001600160a01b039c8d166020850152604084019b909b525050606081019790975294151560808701529290961660a085015260c084015260e083019490945261010082019390935291151561012090920191909152919050565b600060208284031215610cfa57600080fd5b5051919050565b6000610120808352610d158184018d610c35565b6001600160a01b039b909b166020840152505060408101979097526060870195909552608086019390935290151560a085015260c084015260e08301526101009091015291905056fea2646970667358221220c2c164bd8e11820f48555a25ee6d47bf98b3f92c622b78ecb06d855295767b9e64736f6c634300080e0033a2646970667358221220fc3a22bc11900c5387d1e400419aa4b25f56bd3ad62f09918a1e9cdd822b3cee64736f6c634300080e0033","deployedBytecode":"0x608060405260043610620003d75760003560e01c80638fedabcc1162000203578063c290d6911162000117578063e07ee06d11620000ad578063eb02c3011162000078578063eb02c3011462000c5d578063f2fde38b1462000cb0578063f887ea401462000cd5578063fbfa77cf1462000d0b57600080fd5b8063e07ee06d1462000bc5578063e086e5ec1462000bea578063e7d015f21462000c02578063e8679ba71462000c3857600080fd5b8063c7e42b1b11620000ee578063c7e42b1b1462000b5a578063d0e30db014620004c9578063d2d89def1462000b7f578063d978f1451462000ba457600080fd5b8063c290d6911462000aea578063c34c08e51462000b0f578063c743c4c61462000b3857600080fd5b8063ab0d6eb01162000199578063b2016bd41162000164578063b2016bd41462000a3f578063b2567a981462000a75578063bd6423d51462000aaf578063be0bceb61462000ad257600080fd5b8063ab0d6eb014620009bd578063ae3302c214620009d4578063b11bb6eb14620009f7578063b1de531d1462000a1a57600080fd5b80639ab0755811620001da5780639ab0755814620009365780639b2cb5d8146200095b5780639c1720171462000973578063a722d4ca146200099857600080fd5b80638fedabcc146200085857806397c1e4b6146200087d57806399fbab88146200089957600080fd5b80635f48f39311620002fb57806371640de311620002915780637748a64f116200025c5780637748a64f14620007ac578063897b063714620007dd57806389a3027114620008025780638da5cb5b146200083857600080fd5b806371640de3146200073357806372569c8e146200074b57806372cf40b9146200077057806376f37001146200078757600080fd5b80636617fbd211620002d25780636617fbd214620006ac5780636bcf674614620006d15780636ed8e18e14620006f6578063715018a6146200071b57600080fd5b80635f48f393146200062057806361ef161f14620006385780636254ac8e146200068757600080fd5b806332f8b03911620003715780634165e44e11620003485780634165e44e146200059957806341f6cf4e14620005be5780634fe47f7014620005d65780635d216eb514620005fb57600080fd5b806332f8b039146200053757806337a063d2146200055c57806340e9903b146200058157600080fd5b8063141d661911620003b2578063141d661914620004a45780631c3c0ea814620004cb57806320f6f76f14620004f057806322578475146200051257600080fd5b806304a5ea7d14620003dc578063075a6f5a146200042057806308f789e4146200045d575b600080fd5b348015620003e957600080fd5b506200040d620003fb3660046200367e565b600a6020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156200042d57600080fd5b50620004456200043f3660046200367e565b62000d41565b60408051921515835260208301919091520162000417565b3480156200046a57600080fd5b50620004916200047c366004620036c0565b600c6020526000908152604090205460ff1681565b60405160ff909116815260200162000417565b348015620004b157600080fd5b50620004c9620004c3366004620036e7565b62000e5b565b005b348015620004d857600080fd5b50620004c9620004ea366004620036c0565b62000f05565b348015620004fd57600080fd5b50600654620004919062010000900460ff1681565b3480156200051f57600080fd5b50620004c96200053136600462003737565b62000f61565b3480156200054457600080fd5b506200040d620005563660046200367e565b62000fe5565b3480156200056957600080fd5b50620004c96200057b3660046200367e565b620010dd565b3480156200058e57600080fd5b506200040d60055481565b348015620005a657600080fd5b50620004c9620005b836600462003755565b6200110f565b348015620005cb57600080fd5b506200040d60085481565b348015620005e357600080fd5b50620004c9620005f53660046200367e565b620011ac565b3480156200060857600080fd5b50620004c96200061a3660046200378d565b6200120f565b3480156200062d57600080fd5b506200040d60035481565b3480156200064557600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200162000417565b3480156200069457600080fd5b50620004c9620006a63660046200367e565b6200124c565b348015620006b957600080fd5b50620004c9620006cb366004620037c8565b6200125a565b348015620006de57600080fd5b506200040d620006f03660046200367e565b62001296565b3480156200070357600080fd5b50620004c962000715366004620037f7565b62001375565b3480156200072857600080fd5b50620004c96200138b565b3480156200074057600080fd5b506200040d60025481565b3480156200075857600080fd5b50620004c96200076a36600462003755565b620013c6565b620004c96200078136600462003922565b6200144a565b3480156200079457600080fd5b50620004c9620007a63660046200367e565b62001499565b348015620007b957600080fd5b506200040d620007cb366004620036c0565b600d6020526000908152604090205481565b348015620007ea57600080fd5b50620004c9620007fc3660046200367e565b6200159e565b3480156200080f57600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156200084557600080fd5b506000546001600160a01b03166200066e565b3480156200086557600080fd5b506200040d620008773660046200367e565b62001601565b3480156200088a57600080fd5b50600654620004919060ff1681565b348015620008a657600080fd5b506200091e620008b83660046200367e565b600960205260009081526040902080546001820154600283015460038401546004850154600586015460069096015460ff808716976101009097046001600160a01b03169663ffffffff841693600160201b8104831693600160281b909104831692168a565b604051620004179a9998979695949392919062003a0e565b3480156200094357600080fd5b50620004c962000955366004620036c0565b620017fa565b3480156200096857600080fd5b506200040d60045481565b3480156200098057600080fd5b506200040d6200099236600462003a9d565b6200193e565b348015620009a557600080fd5b50620004c9620009b7366004620036c0565b62001a6a565b620004c9620009ce36600462003abd565b62001b60565b348015620009e157600080fd5b5060065462000491906301000000900460ff1681565b34801562000a0457600080fd5b506006546200049190600160201b900460ff1681565b34801562000a2757600080fd5b50620004c962000a3936600462003b7a565b62001bad565b34801562000a4c57600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b34801562000a8257600080fd5b506200066e62000a94366004620036c0565b600b602052600090815260409020546001600160a01b031681565b34801562000abc57600080fd5b506006546200049190600160281b900460ff1681565b34801562000adf57600080fd5b506200040d60075481565b34801562000af757600080fd5b50620004c962000b093660046200367e565b62001c38565b34801562000b1c57600080fd5b506006546200066e90600160301b90046001600160a01b031681565b34801562000b4557600080fd5b506001546200066e906001600160a01b031681565b34801562000b6757600080fd5b50620004c962000b79366004620036c0565b6200216c565b34801562000b8c57600080fd5b50620004c962000b9e36600462003b9b565b62002280565b34801562000bb157600080fd5b506006546200049190610100900460ff1681565b34801562000bd257600080fd5b50620004c962000be4366004620036c0565b62002371565b34801562000bf757600080fd5b50620004c9620023c0565b34801562000c0f57600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b34801562000c4557600080fd5b50620004c962000c5736600462003737565b6200241a565b34801562000c6a57600080fd5b5062000c8262000c7c3660046200367e565b62002497565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00162000417565b34801562000cbd57600080fd5b50620004c962000ccf366004620036c0565b620025df565b34801562000ce257600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b34801562000d1857600080fd5b506200066e7f000000000000000000000000000000000000000000000000000000000000000081565b600081815260096020908152604080832080546001600160a01b0361010090910481168552600b90935281842054600480830154935163045a6f3760e41b8152869593947f00000000000000000000000000000000000000000000000000000000000000008516946345a6f3709462000e0e949116927f0000000000000000000000000000000000000000000000000000000000000000927f000000000000000000000000000000000000000000000000000000000000000092600160201b90910460ff16910162003bbe565b6040805180830381865afa15801562000e2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e51919062003be8565b9250925050915091565b6000546001600160a01b0316331462000e915760405162461bcd60e51b815260040162000e889062003c19565b60405180910390fd5b6001600160a01b038281166000908152600b60205260409081902054905163c7e42b1b60e01b8152838316600482015291169063c7e42b1b90602401600060405180830381600087803b15801562000ee857600080fd5b505af115801562000efd573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331462000f325760405162461bcd60e51b815260040162000e889062003c19565b600680546001600160a01b03909216600160301b026601000000000000600160d01b0319909216919091179055565b6000546001600160a01b0316331462000f8e5760405162461bcd60e51b815260040162000e889062003c19565b6006805465ff00000000001916600160281b60ff8416908102919091179091556040519081527f5f50f6e7ffe7e065c69751d5811e3fcc3c6396476e9adca6c1ed61451a049316906020015b60405180910390a150565b60008062000ff38362002497565b505050600086815260096020526040812091945090925083900390506200109357620f424062001038670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001044919062003c86565b60018201546006830154600284015460ff90911690620010679060649062003c86565b62001073919062003c64565b6200107f919062003c64565b6200108b919062003c86565b949350505050565b620f4240620010b7670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b620010c3919062003c86565b6001820154600683015460ff166200106760648662003c86565b6000546001600160a01b031633146200110a5760405162461bcd60e51b815260040162000e889062003c19565b600555565b6000546001600160a01b031633146200113c5760405162461bcd60e51b815260040162000e889062003c19565b6006805463ffff000019166201000060ff85811691820263ff0000001916929092176301000000928516928302179092556040805192835260208301919091527faacff572373fdda7109b3504c37b2b643367b69864313bb036c21569da79b4af91015b60405180910390a15050565b6000546001600160a01b03163314620011d95760405162461bcd60e51b815260040162000e889062003c19565b60038190556040518181527fe49b18fe24eb0f323a42b5d7c70de83440fe7b490823bd47bf1a891f92d7a03c9060200162000fda565b6000546001600160a01b031633146200123c5760405162461bcd60e51b815260040162000e889062003c19565b6200124882826200267e565b5050565b62001257816200271d565b50565b6000546001600160a01b03163314620012875760405162461bcd60e51b815260040162000e889062003c19565b600091820b600755900b600855565b600080620012a48362002497565b5050506000868152600960205260408120919450909250839003905062001326576004810154600160201b900460ff161562001311576006810154620012ef9060ff16606462003ca9565b60ff166064826002015462001305919062003c86565b6200108b919062003c64565b6006810154620012ef9060ff16606462003ccf565b6004810154600160201b900460ff161562001360576006810154620013509060ff16606462003ca9565b60ff166200130560648462003c86565b6006810154620013509060ff16606462003ccf565b6200138584848484600162002b52565b50505050565b6000546001600160a01b03163314620013b85760405162461bcd60e51b815260040162000e889062003c19565b620013c4600062002f4e565b565b6000546001600160a01b03163314620013f35760405162461bcd60e51b815260040162000e889062003c19565b6006805460ff84811661ffff199092168217610100918516918202179092556040805191825260208201929092527f70eb7ebb846f76a17160a0e9ced7b933db2adad281c51925bf836c54dc2014939101620011a0565b6000546001600160a01b03163314620014775760405162461bcd60e51b815260040162000e889062003c19565b6200148c8b8b8b8b8b8b8b8b8b8b8b62002f9e565b5050505050505050505050565b60008181526009602052604081206004810154909190620014c490600160201b900460ff166200193e565b6004830154909150600160201b900460ff161562001538576000838152600a6020526040902054811015620015325760405162461bcd60e51b8152602060048201526013602482015272383934b1b2903132b637bb903a3934b3b3b2b960691b604482015260640162000e88565b6200158e565b6000838152600a60205260409020548111156200158e5760405162461bcd60e51b8152602060048201526013602482015272383934b1b29030b137bb32903a3934b3b3b2b960691b604482015260640162000e88565b62001599836200271d565b505050565b6000546001600160a01b03163314620015cb5760405162461bcd60e51b815260040162000e889062003c19565b60038190556040518181527f31e8afaf594e92b0e3a71872c4b570994eaf53a4fb17977eb469c2b786cd70239060200162000fda565b6000806200160f8362002497565b50505060008681526009602052604081206004810154929550935091506200164190600160201b900460ff166200193e565b9050826000036200173d576004820154600160201b900460ff1615620016e057816002015481106200167857506000949350505050565b620f42406200169c670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b620016a8919062003c86565b8260010154828460020154620016bf919062003cf7565b620016cb919062003c64565b620016d7919062003c86565b95945050505050565b81600201548111620016f757506000949350505050565b620f42406200171b670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001727919062003c86565b60018301546002840154620016bf908462003cf7565b6004820154600160201b900460ff1615620017a6578281106200176557506000949350505050565b620f424062001789670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001795919062003c86565b6001830154620016bf838662003cf7565b828111620017b957506000949350505050565b620f4240620017dd670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b620017e9919062003c86565b6001830154620016bf858462003cf7565b6000546001600160a01b03163314620018275760405162461bcd60e51b815260040162000e889062003c19565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006200189f6000546001600160a01b031690565b604051620018ad9062003670565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f080158015620018f2573d6000803e3d6000fd5b506001600160a01b039283166000908152600b6020908152604080832080546001600160a01b0319169490961693909317909455600c9093529091208054600260ff1990911617905550565b60008115620019fb57604051637092736960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e124e6d2906024015b602060405180830381865afa158015620019cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019f5919062003d11565b92915050565b6040516340d3096b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000016906381a612d690602401620019b1565b6000546001600160a01b0316331462001a975760405162461bcd60e51b815260040162000e889062003c19565b6001600160a01b038181166000908152600b60205260409081902054905163742dcc2b60e01b81527f0000000000000000000000000000000000000000000000000000000000000000831660048201527f000000000000000000000000000000000000000000000000000000000000000083166024820152306044820152600019606482015291169063742dcc2b90608401600060405180830381600087803b15801562001b4457600080fd5b505af115801562001b59573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331462001b8d5760405162461bcd60e51b815260040162000e889062003c19565b62001ba18a8a8a8a8a8a8a8a8a8a62003036565b50505050505050505050565b6000546001600160a01b0316331462001bda5760405162461bcd60e51b815260040162000e889062003c19565b6001600160a01b0382166000818152600c6020908152604091829020805460ff191660ff86169081179091558251938452908301527fe793b34a2f1b8660bdad3ebe9bf239c8cae6e03eb4e2e60007581b1995f69ee09101620011a0565b60008181526009602052604090206001815460ff16600281111562001c615762001c61620039f8565b1462001ca55760405162461bcd60e51b81526020600482015260126024820152711c1bdcda5d1a5bdb881a5cc818db1bdcd95960721b604482015260640162000e88565b6000546001600160a01b0316331480159062001cd35750600654600160301b90046001600160a01b03163314155b1562001d0a57805461010090046001600160a01b0316331462001d0a5760405162461bcd60e51b815260040162000e889062003d2b565b600062001d178362002497565b505050505090508060001462001d635760405162461bcd60e51b815260206004820152601060248201526f3837b9b4ba34b7b71034b99037b832b760811b604482015260640162000e88565b81546001600160a01b0361010090910481166000908152600b60205260408082205490516370a0823160e01b8152908316600482015290917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801562001de5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e0b919062003d11565b90508060000362001e515760405162461bcd60e51b815260206004820152600f60248201526e18985b185b98d9481a5cc81b9d5b1b608a1b604482015260640162000e88565b60018301546004840154600160201b900460ff1662001ebf57620f424062001e8e670de0b6b3a764000068327cb2734119d3b7a9601e1b62003c64565b62001e9a919062003c86565b8460020154856001015462001eb0919062003c64565b62001ebc919062003c86565b90505b60058401548211600080821562001f235760048701546005880154600160281b90910460ff169060649062001ef5908862003cf7565b62001f01919062003c86565b62001f0d919062003c64565b905062001f1b818662003cf7565b915062001f98565b84915062001f4b62001f358962000fe5565b885461010090046001600160a01b03166200267e565b865461010090046001600160a01b03166000908152600c6020526040812080546001929062001f7f90849060ff1662003ca9565b92506101000a81548160ff021916908360ff1602179055505b865461010090046001600160a01b039081166000818152600b6020526040908190205490516323b872dd60e01b81527f00000000000000000000000000000000000000000000000000000000000000008416936323b872dd93620020059390911691879060040162003d70565b6020604051808303816000875af115801562002025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200204b919062003d94565b5080156200210957865461010090046001600160a01b039081166000908152600b6020526040908190205490516323b872dd60e01b81527f00000000000000000000000000000000000000000000000000000000000000008316926323b872dd92620020c1929116903090869060040162003d70565b6020604051808303816000875af1158015620020e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002107919062003d94565b505b865460ff191660021787556003870154604080518a81526020810184905290810184905260608101919091527f02bd97927012c328f69c787c8a0e6e9acfb28301961db4e64ec32758eddb00079060800160405180910390a15050505050505050565b6000546001600160a01b03163314620021995760405162461bcd60e51b815260040162000e889062003c19565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015620021e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200220e919062003d11565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156200225a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001248919062003d94565b600082815260096020526040812090546001600160a01b03163314801590620022bb5750600654600160301b90046001600160a01b03163314155b156200232157805461010090046001600160a01b03163314620023215760405162461bcd60e51b815260206004820152601c60248201527f796f7520617265206e6f7420746865206f7074696f6e206f776e657200000000604482015260640162000e88565b6000838152600a602090815260409182902084905581518581529081018490527faf4603f246fed5ebfd8c6da49ea0934c39b43337752b252777090b8e1c5399ef910160405180910390a1505050565b6000546001600160a01b031633146200239e5760405162461bcd60e51b815260040162000e889062003c19565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620023ed5760405162461bcd60e51b815260040162000e889062003c19565b60405133904780156108fc02916000818181858888f1935050505015801562001257573d6000803e3d6000fd5b6000546001600160a01b03163314620024475760405162461bcd60e51b815260040162000e889062003c19565b6006805464ff000000001916600160201b60ff8416908102919091179091556040519081527f70447e35d3f6014cf755ce47eecb27abb2331710fb0fcaea1d9c15d411c319559060200162000fda565b600081815260096020908152604080832080546001600160a01b0361010090910481168552600b909352818420546004808301549351634a3f088d60e01b81528695869586958695869591947f0000000000000000000000000000000000000000000000000000000000000000851694634a3f088d946200256d9493909116927f0000000000000000000000000000000000000000000000000000000000000000927f000000000000000000000000000000000000000000000000000000000000000092600160201b900460ff16910162003bbe565b61010060405180830381865afa1580156200258c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025b2919062003db4565b50959c50939a50919850965094509250506000859003620025d557806002015494505b5091939550919395565b6000546001600160a01b031633146200260c5760405162461bcd60e51b815260040162000e889062003c19565b6001600160a01b038116620026735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000e88565b620012578162002f4e565b6001546040516323b872dd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116926323b872dd92620026d79291909116908590879060040162003d70565b6020604051808303816000875af1158015620026f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001599919062003d94565b600081815260096020526040812090815460ff166002811115620027455762002745620039f8565b14620027895760405162461bcd60e51b81526020600482015260126024820152711c1bdcda5d1a5bdb881a5cc818db1bdcd95960721b604482015260640162000e88565b6000546001600160a01b03163314801590620027b75750600654600160301b90046001600160a01b03163314155b15620027ee57805461010090046001600160a01b03163314620027ee5760405162461bcd60e51b815260040162000e889062003d2b565b60048101546000906200280b90600160201b900460ff166200193e565b905060008060006200281d8662002497565b50505092509250925082600003620028705760405162461bcd60e51b81526020600482015260156024820152741c1bdcda5d1a5bdb881cda5e99481a5cc81b9d5b1b605a1b604482015260640162000e88565b6004850154600160201b900460ff1615620028f857808410620028f2576200289a60648262003c86565b620028a790606562003c64565b841015620028f25760405162461bcd60e51b8152602060048201526017602482015276746f6f206c6974746c65207072696365206368616e676560481b604482015260640162000e88565b62002965565b80841162002965576200290d60648262003c86565b6200291a90606362003c64565b841115620029655760405162461bcd60e51b8152602060048201526017602482015276746f6f206c6974746c65207072696365206368616e676560481b604482015260640162000e88565b600080620029738862000d41565b909250905081151560000362002a1a576004870154600160201b900460ff16620029aa57620029a28862001296565b8610620029b8565b620029b58862001296565b86115b1562002a1a576004870154620029d8906107089063ffffffff1662003e21565b63ffffffff16421162002a1a5760405162461bcd60e51b8152602060048201526009602482015268746f6f206561726c7960b81b604482015260640162000e88565b60008262002a29578162002a2b565b845b905060006008546103e862002a41919062003e49565b62002a4f6103e88a62003c86565b62002a5b919062003c64565b895490915061010090046001600160a01b031662002af98162002a7d620030c9565b7f0000000000000000000000000000000000000000000000000000000000000000868c8f60040160049054906101000a900460ff16600b6000896001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a90046001600160a01b0316896000600554600062002f9e565b60028a0186905560038a01899055895460ff19166001178a556040518b81527ff3a2f044163a96d44e2bf00ab8150db46030e3bff09e9dee1e59ce229ebbdefa9060200160405180910390a15050505050505050505050565b600062002b5f826200193e565b905062002b7186868686868662003145565b336000818152600b6020526040908190205490516323b872dd60e01b815288926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116936323b872dd9362002bd8939290911690869060040162003d70565b6020604051808303816000875af115801562002bf8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c1e919062003d94565b50600060ff8516670de0b6b3a764000062002c3a858b62003c64565b62002c46919062003c86565b62002c52919062003c64565b905060006007546103e862002c68919062003e49565b62002c766103e88662003c86565b62002c82919062003c64565b905062002cc73362002c93620030c9565b7f0000000000000000000000000000000000000000000000000000000000000000866000878b886005546000801b62003036565b600060028760ff161162002cdd57600062002ceb565b600654600160281b900460ff165b60065462002d0490600160201b900460ff168b62003e90565b62002d10919062003ccf565b604080516101408101825260008152336020820152919250810162002d3960ff8a168d62003c64565b8152600060208201819052604082015260600162002d5b4262278d0062003ebc565b63ffffffff16815260200187151581526020018260ff1681526020018581526020018a60ff1681525060096000600254815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600281111562002dc65762002dc6620039f8565b02179055506020828101518254610100600160a81b0319166101006001600160a01b039283168102919091178455604080860151600186015560608601516002808701919091556080870151600387015560a087015160048701805460c08a015160e08b015163ffffffff90941664ffffffffff1990921691909117600160201b911515919091021765ff00000000001916600160281b60ff93841602179055928701516005870155610120909601516006909501805460ff1916959092169490941790559254336000908152600b8352838120549094168452600d909152912081905562002eb6908962002280565b6002547f859e2a4a7208665502e139397707532bdf364493f7a60082be9c1a83704a975a903362002eeb60ff8b168e62003c64565b604080519384526001600160a01b03909216602084015290820152606081018690526080810187905260ff831660a082015260c00160405180910390a160016002600082825462002f3d919062003ebc565b909155505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03808c166000908152600b60205260409081902054600554915163c1303d6f60e01b815292169163c1303d6f919062002ff5908e908e908e908e908e908e908e908e908e908e9060040162003f1d565b6000604051808303818588803b1580156200300f57600080fd5b505af115801562003024573d6000803e3d6000fd5b50505050505050505050505050505050565b6001600160a01b03808b166000908152600b60205260409081902054905163f4bf4d4960e01b815291169063f4bf4d4990849062003089908d908d908d908d908d908d908d9089908d9060040162003f8e565b6000604051808303818588803b158015620030a357600080fd5b505af1158015620030b8573d6000803e3d6000fd5b505050505050505050505050505050565b604080516001808252818301909252606091602080830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000008160008151811062003122576200312262003fed565b60200260200101906001600160a01b031690816001600160a01b03168152505090565b336000908152600c602052604081205460ff16908190036200319d5760405162461bcd60e51b815260206004820152601060248201526f1b1a5b5a5d081a5cc81c995858da195960821b604482015260640162000e88565b60065460ff9081169087161015620031ec5760405162461bcd60e51b81526020600482015260116024820152701cdd1bdc081a5cc81d1bdbc81cdb585b1b607a1b604482015260640162000e88565b60065460ff610100909104811690871611156200323e5760405162461bcd60e51b815260206004820152600f60248201526e73746f7020697320746f6f2062696760881b604482015260640162000e88565b60065460ff6201000090910481169085161015620032975760405162461bcd60e51b81526020600482015260156024820152741b195d995c9859d9481a5cc81d1bdbc81cdb585b1b605a1b604482015260640162000e88565b60065460ff630100000090910481169085161115620032ef5760405162461bcd60e51b81526020600482015260136024820152726c6576657261676520697320746f6f2062696760681b604482015260640162000e88565b600354871115620033375760405162461bcd60e51b8152602060048201526011602482015270616d6f756e7420697320746f6f2062696760781b604482015260640162000e88565b600454871015620033815760405162461bcd60e51b8152602060048201526013602482015272185b5bdd5b9d081a5cc81d1bdbc81cdb585b1b606a1b604482015260640162000e88565b336000908152600b6020526040808220549051634a3f088d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692634a3f088d92620034299291909116907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908a9060040162003bbe565b61010060405180830381865afa15801562003448573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200346e919062003db4565b50505050505050905080600014620034d35760405162461bcd60e51b815260206004820152602160248201527f796f7520616c7265616479206861766520616e206f70656e20706f736974696f6044820152603760f91b606482015260840162000e88565b831562003531578286116200352b5760405162461bcd60e51b815260206004820181905260248201527f74616b65206c657373207468616e20746865206f70656e696e67207072696365604482015260640162000e88565b62003582565b828610620035825760405162461bcd60e51b815260206004820181905260248201527f74616b65206d6f7265207468616e20746865206f70656e696e67207072696365604482015260640162000e88565b336000908152600b60205260408082205490516370a0823160e01b81526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015620035fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003621919062003d11565b90508015620036655760405162461bcd60e51b815260206004820152600f60248201526e18985b185b98d9481a5cc81b9d5b1b608a1b604482015260640162000e88565b505050505050505050565b61112f806200400483390190565b6000602082840312156200369157600080fd5b5035919050565b6001600160a01b03811681146200125757600080fd5b8035620036bb8162003698565b919050565b600060208284031215620036d357600080fd5b8135620036e08162003698565b9392505050565b60008060408385031215620036fb57600080fd5b8235620037088162003698565b915060208301356200371a8162003698565b809150509250929050565b803560ff81168114620036bb57600080fd5b6000602082840312156200374a57600080fd5b620036e08262003725565b600080604083850312156200376957600080fd5b620037748362003725565b9150620037846020840162003725565b90509250929050565b60008060408385031215620037a157600080fd5b8235915060208301356200371a8162003698565b8035600081900b8114620036bb57600080fd5b60008060408385031215620037dc57600080fd5b620037e783620037b5565b91506200378460208401620037b5565b600080600080608085870312156200380e57600080fd5b84359350620038206020860162003725565b925060408501359150620038376060860162003725565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200386a57600080fd5b8135602067ffffffffffffffff808311156200388a576200388a62003842565b8260051b604051601f19603f83011681018181108482111715620038b257620038b262003842565b604052938452858101830193838101925087851115620038d157600080fd5b83870191505b84821015620038fb57620038eb82620036ae565b83529183019190830190620038d7565b979650505050505050565b80151581146200125757600080fd5b8035620036bb8162003906565b60008060008060008060008060008060006101608c8e0312156200394557600080fd5b8b35620039528162003698565b9a5060208c013567ffffffffffffffff8111156200396f57600080fd5b6200397d8e828f0162003858565b9a505060408c0135620039908162003698565b985060608c0135975060808c01359650620039ae60a08d0162003915565b9550620039be60c08d01620036ae565b945060e08c013593506101008c013592506101208c01359150620039e66101408d0162003915565b90509295989b509295989b9093969950565b634e487b7160e01b600052602160045260246000fd5b610140810160038c1062003a3257634e487b7160e01b600052602160045260246000fd5b8b82526001600160a01b038b166020830152604082018a9052606082018990526080820188905263ffffffff871660a083015285151560c083015260ff851660e08301528361010083015262003a8e61012083018460ff169052565b9b9a5050505050505050505050565b60006020828403121562003ab057600080fd5b8135620036e08162003906565b6000806000806000806000806000806101408b8d03121562003ade57600080fd5b8a3562003aeb8162003698565b995060208b013567ffffffffffffffff81111562003b0857600080fd5b62003b168d828e0162003858565b99505060408b013562003b298162003698565b975060608b0135965060808b0135955060a08b0135945060c08b013562003b508162003906565b8094505060e08b013592506101008b013591506101208b013590509295989b9194979a5092959850565b6000806040838503121562003b8e57600080fd5b8235620037748162003698565b6000806040838503121562003baf57600080fd5b50508035926020909101359150565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b6000806040838503121562003bfc57600080fd5b825162003c098162003906565b6020939093015192949293505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562003c815762003c8162003c4e565b500290565b60008262003ca457634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff84168082101562003cc65762003cc662003c4e565b90039392505050565b600060ff821660ff84168060ff0382111562003cef5762003cef62003c4e565b019392505050565b60008282101562003d0c5762003d0c62003c4e565b500390565b60006020828403121562003d2457600080fd5b5051919050565b60208082526025908201527f796f7520617265206e6f7420746865206f776e6572206f662074686520706f7360408201526434ba34b7b760d91b606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121562003da757600080fd5b8151620036e08162003906565b600080600080600080600080610100898b03121562003dd257600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015162003e098162003906565b8092505060e089015190509295985092959890939650565b600063ffffffff8381169083168181101562003e415762003e4162003c4e565b039392505050565b600080821280156001600160ff1b038490038513161562003e6e5762003e6e62003c4e565b600160ff1b839003841281161562003e8a5762003e8a62003c4e565b50500190565b600060ff821660ff84168160ff048111821515161562003eb45762003eb462003c4e565b029392505050565b6000821982111562003ed25762003ed262003c4e565b500190565b600081518084526020808501945080840160005b8381101562003f125781516001600160a01b03168752958201959082019060010162003eeb565b509495945050505050565b600061014080835262003f338184018e62003ed7565b6001600160a01b039c8d166020850152604084019b909b525050606081019790975294151560808701529290961660a085015260c084015260e083019490945261010082019390935291151561012090920191909152919050565b600061012080835262003fa48184018d62003ed7565b6001600160a01b039b909b166020840152505060408101979097526060870195909552608086019390935290151560a085015260c084015260e083015261010090910152919050565b634e487b7160e01b600052603260045260246000fdfe6101006040523480156200001257600080fd5b506040516200112f3803806200112f83398101604081905262000035916200029e565b620000403362000079565b6001600160a01b0380851660805283811660a05282811660c052811660e0526200006f848433600019620000c9565b5050505062000331565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b60a0516040516338c74dd960e01b81526001600160a01b038681166004830152909116906338c74dd990602401600060405180830381600087803b1580156200017057600080fd5b505af115801562000185573d6000803e3d6000fd5b505060c05160405163095ea7b360e01b81526001600160a01b03878116600483015260248201869052909116925063095ea7b391506044016020604051808303816000875af1158015620001dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000203919062000306565b5060c05160405163095ea7b360e01b81526001600160a01b038481166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af115801562000258573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200027e919062000306565b5050505050565b6001600160a01b03811681146200029b57600080fd5b50565b60008060008060808587031215620002b557600080fd5b8451620002c28162000285565b6020860151909450620002d58162000285565b6040860151909350620002e88162000285565b6060860151909250620002fb8162000285565b939692955090935050565b6000602082840312156200031957600080fd5b815180151581146200032a57600080fd5b9392505050565b60805160a05160c05160e051610d946200039b6000396000818161022d015281816104a001526107c301526000818161017e0152818161038b0152610421015260008181610261015261030b01526000818160d90152818161053101526108540152610d946000f3fe6080604052600436106100c25760003560e01c8063c7e42b1b1161007f578063f2fde38b11610059578063f2fde38b146101e8578063f4bf4d4914610208578063f851a4401461021b578063f887ea401461024f57600080fd5b8063c7e42b1b146101b3578063d0e30db01461012c578063e086e5ec146101d357600080fd5b806361ef161f146100c7578063715018a614610117578063742dcc2b1461012e5780638da5cb5b1461014e578063b2016bd41461016c578063c1303d6f146101a0575b600080fd5b3480156100d357600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b34801561012357600080fd5b5061012c610283565b005b34801561013a57600080fd5b5061012c61014936600461094d565b6102c2565b34801561015a57600080fd5b506000546001600160a01b03166100fb565b34801561017857600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b61012c6101ae366004610a64565b610495565b3480156101bf57600080fd5b5061012c6101ce366004610b20565b6105b8565b3480156101df57600080fd5b5061012c6106c7565b3480156101f457600080fd5b5061012c610203366004610b20565b610720565b61012c610216366004610b44565b6107b8565b34801561022757600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561025b57600080fd5b506100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146102b65760405162461bcd60e51b81526004016102ad90610be3565b60405180910390fd5b6102c060006108d8565b565b6000546001600160a01b031633146102ec5760405162461bcd60e51b81526004016102ad90610be3565b6040516338c74dd960e01b81526001600160a01b0385811660048301527f000000000000000000000000000000000000000000000000000000000000000016906338c74dd990602401600060405180830381600087803b15801561034f57600080fd5b505af1158015610363573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038681166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016925063095ea7b391506044016020604051808303816000875af11580156103d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fa9190610c18565b5060405163095ea7b360e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610c18565b5050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806104d657506000546001600160a01b031633145b61051a5760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b60448201526064016102ad565b6040516339c374bf60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e70dd2fc90849061057a908e908e908e908e908e908e908e908e908a908e90600401610c79565b6000604051808303818588803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b505050505050505050505050505050565b6000546001600160a01b031633146105e25760405162461bcd60e51b81526004016102ad90610be3565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190610ce8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190610c18565b5050565b6000546001600160a01b031633146106f15760405162461bcd60e51b81526004016102ad90610be3565b60405133904780156108fc02916000818181858888f1935050505015801561071d573d6000803e3d6000fd5b50565b6000546001600160a01b0316331461074a5760405162461bcd60e51b81526004016102ad90610be3565b6001600160a01b0381166107af5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ad565b61071d816108d8565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806107f957506000546001600160a01b031633145b61083d5760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b60448201526064016102ad565b604051630c98741760e41b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c987417090849061089b908d908d908d908d908d908d908d9089908d90600401610d01565b6000604051808303818588803b1580156108b457600080fd5b505af11580156108c8573d6000803e3d6000fd5b5050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461071d57600080fd5b803561094881610928565b919050565b6000806000806080858703121561096357600080fd5b843561096e81610928565b9350602085013561097e81610928565b9250604085013561098e81610928565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109c557600080fd5b8135602067ffffffffffffffff808311156109e2576109e261099e565b8260051b604051601f19603f83011681018181108482111715610a0757610a0761099e565b604052938452858101830193838101925087851115610a2557600080fd5b83870191505b84821015610a4b57610a3c8261093d565b83529183019190830190610a2b565b979650505050505050565b801515811461071d57600080fd5b6000806000806000806000806000806101408b8d031215610a8457600080fd5b8a3567ffffffffffffffff811115610a9b57600080fd5b610aa78d828e016109b4565b9a505060208b0135610ab881610928565b985060408b0135975060608b0135965060808b0135610ad681610a56565b955060a08b0135610ae681610928565b945060c08b0135935060e08b013592506101008b013591506101208b0135610b0d81610a56565b809150509295989b9194979a5092959850565b600060208284031215610b3257600080fd5b8135610b3d81610928565b9392505050565b60008060008060008060008060006101208a8c031215610b6357600080fd5b893567ffffffffffffffff811115610b7a57600080fd5b610b868c828d016109b4565b99505060208a0135610b9781610928565b975060408a0135965060608a0135955060808a0135945060a08a0135610bbc81610a56565b8094505060c08a0135925060e08a013591506101008a013590509295985092959850929598565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610c2a57600080fd5b8151610b3d81610a56565b600081518084526020808501945080840160005b83811015610c6e5781516001600160a01b031687529582019590820190600101610c49565b509495945050505050565b6000610140808352610c8d8184018e610c35565b6001600160a01b039c8d166020850152604084019b909b525050606081019790975294151560808701529290961660a085015260c084015260e083019490945261010082019390935291151561012090920191909152919050565b600060208284031215610cfa57600080fd5b5051919050565b6000610120808352610d158184018d610c35565b6001600160a01b039b909b166020840152505060408101979097526060870195909552608086019390935290151560a085015260c084015260e08301526101009091015291905056fea2646970667358221220c2c164bd8e11820f48555a25ee6d47bf98b3f92c622b78ecb06d855295767b9e64736f6c634300080e0033a2646970667358221220fc3a22bc11900c5387d1e400419aa4b25f56bd3ad62f09918a1e9cdd822b3cee64736f6c634300080e0033","devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":565,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3828,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"coverAddress","offset":0,"slot":"1","type":"t_address"},{"astId":3837,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"positionId","offset":0,"slot":"2","type":"t_uint256"},{"astId":3840,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"maxAmount","offset":0,"slot":"3","type":"t_uint256"},{"astId":3843,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"minAmount","offset":0,"slot":"4","type":"t_uint256"},{"astId":3845,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"executionFee","offset":0,"slot":"5","type":"t_uint256"},{"astId":3848,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"minStop","offset":0,"slot":"6","type":"t_uint8"},{"astId":3851,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"maxStop","offset":1,"slot":"6","type":"t_uint8"},{"astId":3854,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"minLeverage","offset":2,"slot":"6","type":"t_uint8"},{"astId":3857,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"maxLeverage","offset":3,"slot":"6","type":"t_uint8"},{"astId":3860,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"comissionCoef","offset":4,"slot":"6","type":"t_uint8"},{"astId":3863,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"leverageComissionCoef","offset":5,"slot":"6","type":"t_uint8"},{"astId":3865,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"executor","offset":6,"slot":"6","type":"t_address"},{"astId":3867,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"openSlippage","offset":0,"slot":"7","type":"t_int256"},{"astId":3869,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"closeSlippage","offset":0,"slot":"8","type":"t_int256"},{"astId":3900,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"positions","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_struct(Position)3895_storage)"},{"astId":3904,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"takes","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3908,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"userContractAddress","offset":0,"slot":"11","type":"t_mapping(t_address,t_address)"},{"astId":3912,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"positionsLimit","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint8)"},{"astId":3916,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"userContractIdPosition","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(PositionState)3873":{"encoding":"inplace","label":"enum NoLoss.PositionState","numberOfBytes":"1"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_address,t_uint8)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint8)","numberOfBytes":"32","value":"t_uint8"},"t_mapping(t_uint256,t_struct(Position)3895_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NoLoss.Position)","numberOfBytes":"32","value":"t_struct(Position)3895_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Position)3895_storage":{"encoding":"inplace","label":"struct NoLoss.Position","members":[{"astId":3876,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"state","offset":0,"slot":"0","type":"t_enum(PositionState)3873"},{"astId":3878,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"user","offset":1,"slot":"0","type":"t_address"},{"astId":3880,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"positionSize","offset":0,"slot":"1","type":"t_uint256"},{"astId":3882,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"openPrice","offset":0,"slot":"2","type":"t_uint256"},{"astId":3884,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"closePrice","offset":0,"slot":"3","type":"t_uint256"},{"astId":3886,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"expiration","offset":0,"slot":"4","type":"t_uint32"},{"astId":3888,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"isLong","offset":4,"slot":"4","type":"t_bool"},{"astId":3890,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"comission","offset":5,"slot":"4","type":"t_uint8"},{"astId":3892,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"collateral","offset":0,"slot":"5","type":"t_uint256"},{"astId":3894,"contract":"contracts/NoLoss/NoLossLongPut.sol:NoLossLongPut","label":"stop","offset":0,"slot":"6","type":"t_uint8"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}\');\n\n//# sourceURL=webpack://noloyolo/./src/deployments/arbitrum/NoLoss_LONG_PUT_ETH.json?')}}]);